<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Yt's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://ytlvy.com//"/>
  <updated>2015-06-06T16:04:12.000Z</updated>
  <id>http://ytlvy.com//</id>
  
  <author>
    <name><![CDATA[Y.t]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[IOS NSPredicate]]></title>
    <link href="http://ytlvy.com/2015/06/06/ios-nspredicate/"/>
    <id>http://ytlvy.com/2015/06/06/ios-nspredicate/</id>
    <published>2015-06-06T12:56:36.000Z</published>
    <updated>2015-06-06T16:04:12.000Z</updated>
    <content type="html"><![CDATA[<h3 id="NSPredicate">NSPredicate</h3><p>NSPredicate is a Foundation class that specifies how data should be fetched or filtered.<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSPredicate</span> *bobPredicate = [<span class="built_in">NSPredicate</span> predicateWithFormat:<span class="string">@"firstName = 'Bob'"</span>];</span><br><span class="line"><span class="built_in">NSPredicate</span> *thirtiesPredicate = [<span class="built_in">NSPredicate</span> predicateWithFormat:<span class="string">@"age &gt;= 30"</span>];</span><br><span class="line"></span><br><span class="line">[people filterdArrayUsingPredicate:bobPredicate];</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h4 id="Predicate_Syntax">Predicate Syntax</h4><ol>
<li>%@ is a var arg substitution for an object value—often a string, number, or date</li>
<li>%K is a var arg substitution for a key path</li>
</ol>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSPredicate <span class="variable">*ageIs33Predicate</span> = [NSPredicate predicateWithFormat: <span class="variable">@"</span><span class="variable">%K</span> = <span class="variable">%@</span><span class="string">", @"</span>age<span class="string">", 33]</span></span><br></pre></td></tr></table></figure>
<ol>
<li>$VARIABLE_NAME is a value that can be substituted<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NSPredicate *namesBeginningWithLetterPredicate = </span><br><span class="line">    [NSPredicate <span class="string">predicateWithFormat:</span> @<span class="string">"(firstName BEGINSWITH[cd] $letter) OR (lastName BEGINWITH[cd] $letter)"</span>];</span><br><span class="line"></span><br><span class="line">NSLog(@<span class="string">"'A' Names: %@"</span>, </span><br><span class="line">            [people <span class="string">filterWithPredicate:</span></span><br><span class="line">                [namesBeginningWithLetterPredicate <span class="string">predicateWithSubstitutionVariables:</span>@&#123;@<span class="string">"letter"</span> : @<span class="string">"A"</span>&#125;]]);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="Basic_Comparisons">Basic Comparisons</h4><ol>
<li>=, ==:   equal </li>
<li><blockquote>
<p>=, =&gt;:  greater than or equal</p>
</blockquote>
</li>
<li>&lt;=, =&lt;:  less than or equal</li>
<li><blockquote>
<p>: T     greater t.</p>
</blockquote>
</li>
<li>&lt;:       less than.</li>
<li>!=, &lt;&gt;:  not equal to</li>
<li>BETWEEN  eg: 1 BETWEEN { 0 , 33 }  $INPUT BETWEEN { $LOWER, $UPPER }</li>
</ol>
<h4 id="Basic_Compound_Predicates">Basic Compound Predicates</h4><ol>
<li>AND, &amp;&amp;</li>
<li>OR, ||</li>
<li>NOT, !</li>
</ol>
<h4 id="String_Comparisons">String Comparisons</h4><p>String comparisons are case and diacritic sensitive. by default. One can modify an operator using the key characters c and d within square braces to specify case and diacritic insensitivity respectively. eg: firstName BEGINSWITH[cd] $FIRST_NAME.</p>
<ol>
<li>BEGINSWITH</li>
<li>CONTAINS</li>
<li>ENDSWITH</li>
<li>LIKE         ? and * are allowed as wildcard characters</li>
<li>MATCHES      regex-style </li>
</ol>
<h3 id="Aggregate_Operations">Aggregate Operations</h3><h4 id="Relational_Operations">Relational Operations</h4><ol>
<li>ANY, SOME            eg: ANY children.age &lt; 18</li>
<li>ALL                  eg: ALL children.age &lt; 18</li>
<li>NONE                 eg: NONE children.age &lt; 18</li>
<li>IN                   eg: name IN {‘Ben’, ‘Melissa’, ‘Nick’ }</li>
</ol>
<h4 id="Array_Operations">Array Operations</h4><ol>
<li>array[index]         Specifies the element at the specified index in array</li>
<li>array[FIRST]</li>
<li>array[LAST]</li>
<li>array[SIZE]</li>
<li>Boolean</li>
<li>TRUEPREDICATE        A predicate that always evaluates to TRUE</li>
<li>FALSEPREDICATE       A predicate that always evaluates to FALSE</li>
</ol>
<h4 id="NSCompoundPredicate">NSCompoundPredicate</h4><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="collection">[NSCompoundPredicate andPredicateWithSubpredicate:@<span class="collection">[</span><br><span class="line">    <span class="collection">[NSPredicate predicateWithFormat: @<span class="string">"age &gt; 25"</span>]</span>,</span><br><span class="line">    <span class="collection">[NSPredicate predicateWithFormat: @<span class="string">"firstName = %@"</span>, @<span class="string">"Quentin"</span>]</span></span><br><span class="line">    ]</span>]</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="collection">[NSPredicate predicateWithFormat: @<span class="string">"(age &gt; 25) AND (firstName = %@)"</span>, @<span class="string">"Quentin"</span>]</span><span class="comment">;</span></span><br></pre></td></tr></table></figure>
<h4 id="NSComparisonPredicate">NSComparisonPredicate</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">NSPredicate</span> *)predicateWithLeftExpression:</span><br><span class="line">(<span class="built_in">NSExpression</span> *)lhs</span><br><span class="line">rightExpression:(<span class="built_in">NSExpression</span> *)rhs</span><br><span class="line">       modifier:(<span class="built_in">NSComparisonPredicateModifier</span>)modifier</span><br><span class="line">           type:(<span class="built_in">NSPredicateOperatorType</span>)type</span><br><span class="line">        options:(<span class="built_in">NSUInteger</span>)options</span><br></pre></td></tr></table></figure>
<ul>
<li>lhs: The left hand expression.</li>
<li>rhs: The right hand expression.</li>
<li>modifier: The modifier to apply. (ANY or ALL)</li>
<li>type: The predicate operator type.</li>
<li>options: The options to apply. For no options, pass 0.</li>
</ul>
<h4 id="Block_Predicates">Block Predicates</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSPredicate</span> *shortNamePredicate = </span><br><span class="line">    [<span class="built_in">NSPredicate</span> predicateWithBlock: ^<span class="built_in">BOOL</span>(<span class="keyword">id</span> evaluatedObject, <span class="built_in">NSDictionary</span> *bindings)&#123;</span><br><span class="line">        <span class="keyword">return</span> [[evaluatedObject firstName] length] &lt;= <span class="number">5</span>;</span><br><span class="line">    &#125; ]</span><br></pre></td></tr></table></figure>
<p><strong><em>NSPredicates created with predicateWithBlock: cannot be used for Core Data fetch requests backed by a SQLite store</em></strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="NSPredicate">NSPredicate</h3><p>NSPredicate is a Foundation class that specifies how data should be fetched or filtered.<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSPredicate</span> *bobPredicate = [<span class="built_in">NSPredicate</span> predicateWithFormat:<span class="string">@"firstName = 'Bob'"</span>];</span><br><span class="line"><span class="built_in">NSPredicate</span> *thirtiesPredicate = [<span class="built_in">NSPredicate</span> predicateWithFormat:<span class="string">@"age &gt;= 30"</span>];</span><br><span class="line"></span><br><span class="line">[people filterdArrayUsingPredicate:bobPredicate];</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IOS NSSortDescriptor]]></title>
    <link href="http://ytlvy.com/2015/06/06/ios-nssortdescriptor/"/>
    <id>http://ytlvy.com/2015/06/06/ios-nssortdescriptor/</id>
    <published>2015-06-06T12:54:35.000Z</published>
    <updated>2015-06-06T16:19:58.000Z</updated>
    <content type="html"><![CDATA[<h2 id="NSSortDescriptor">NSSortDescriptor</h2><p>NSSortDescriptor objects are constructed with the following parameters:</p>
<ol>
<li>key: for a given collection, the key for the corresponding value to be sorted on for each object in the collection</li>
<li>ascending: a boolean specifying whether the collection should be sorted in ascending (YES) or descending (NO) order</li>
<li>a selector (SEL) or comparator (NSComparator)</li>
</ol>
<a id="more"></a>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *firstNames = @[<span class="string">@"Alice"</span>, <span class="string">@"Bob"</span>, <span class="string">@"Charlie"</span>, <span class="string">@"Quentin"</span>];</span><br><span class="line"><span class="built_in">NSArray</span> *lastNames = @[<span class="string">@"Smith"</span>, <span class="string">@"Jones"</span>, <span class="string">@"Smith"</span>, <span class="string">@"Alberts"</span>];</span><br><span class="line"><span class="built_in">NSArray</span> *ages = @[@<span class="number">24</span>, @<span class="number">27</span>, @<span class="number">33</span>, @<span class="number">31</span>];</span><br><span class="line"><span class="built_in">NSMutableArray</span> *people = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line"></span><br><span class="line">[firstNames enumerateObjectsUsingBlock: ^(<span class="keyword">id</span> obj, <span class="built_in">NSUInteger</span> idx, <span class="built_in">BOOL</span> *stop) &#123;</span><br><span class="line">    Person *person = [[Person alloc] init];</span><br><span class="line">    person<span class="variable">.firstName</span> = [firstNames objectAtIndex:idx];</span><br><span class="line">    person<span class="variable">.lastName</span> = [lastNames objectAtIndex:idx];</span><br><span class="line">    person<span class="variable">.age</span> = [ages objectAtIndex:idx];</span><br><span class="line">    [people addObject:person];</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSSortDescriptor</span> *firstNameSortDescriptor = </span><br><span class="line">    [<span class="built_in">NSSortDescriptor</span> sortDescriptorWithKey:<span class="string">@"firstName"</span></span><br><span class="line">                                        ascending: <span class="literal">YES</span></span><br><span class="line">                                        selector:<span class="keyword">@selector</span>(localizedStandardCompare:)];</span><br><span class="line"><span class="built_in">NSSortDescriptor</span> *lastNameSortDescriptor =</span><br><span class="line">    [<span class="built_in">NSSortDescriptor</span> sortDescriptorWithKey:<span class="string">@"lastName"</span></span><br><span class="line">                                    ascending: <span class="literal">YES</span></span><br><span class="line">                                    selector: <span class="keyword">@selector</span>(localizedStandardCompare:)];</span><br><span class="line">[people sortedArrayUsingDescriptor:@[firstNameSortDescriptor, lastNameSortDescriptor]];</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="NSSortDescriptor">NSSortDescriptor</h2><p>NSSortDescriptor objects are constructed with the following parameters:</p>
<ol>
<li>key: for a given collection, the key for the corresponding value to be sorted on for each object in the collection</li>
<li>ascending: a boolean specifying whether the collection should be sorted in ascending (YES) or descending (NO) order</li>
<li>a selector (SEL) or comparator (NSComparator)</li>
</ol>]]>
    
    </summary>
    
      <category term="ios" scheme="http://ytlvy.com/tags/ios/"/>
    
      <category term="sort" scheme="http://ytlvy.com/tags/sort/"/>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IOS Key-Value Coding &amp;&amp; Collection Operators]]></title>
    <link href="http://ytlvy.com/2015/06/06/ios-key-value-coding-and-and-collection-operators/"/>
    <id>http://ytlvy.com/2015/06/06/ios-key-value-coding-and-and-collection-operators/</id>
    <published>2015-06-06T12:52:04.000Z</published>
    <updated>2015-06-06T16:05:03.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Key-Value_Coding_&amp;&amp;_Collection_Operators">Key-Value Coding &amp;&amp; Collection Operators</h2><blockquote>
<p>KVC Collection Operators allows actions to be performed on a collection using key path notation in valueForKeyPath:. @’s in a key path denote an aggregate function whose result can be returned or chained, just like any other key path.</p>
</blockquote>
<h3 id="Simple_Collection_Operators">Simple Collection Operators</h3><ol>
<li>@count: Returns the number of objects in the collection.</li>
<li>@sum: Converts each object in the collection to a double, computes the sum, and returns the sum.</li>
<li>@avg: Takes the double value of each object in the collection, and returns the average value.</li>
<li>@max: Determines the maximum value using compare:. Objects must support mutual comparison for this to work.</li>
<li>@min: Same as @max, but returns the minimum value.</li>
</ol>
<a id="more"></a>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[products <span class="string">valueForKeyPath:</span>@<span class="string">"@count"</span>]; <span class="comment">// 4</span></span><br><span class="line">[products <span class="string">valueForKeyPath:</span>@<span class="string">"@sum.price"</span>]; <span class="comment">// 3526.00</span></span><br><span class="line">[products <span class="string">valueForKeyPath:</span>@<span class="string">"@avg.price"</span>]; <span class="comment">// 881.50</span></span><br><span class="line">[products <span class="string">valueForKeyPath:</span>@<span class="string">"@max.price"</span>]; <span class="comment">// 1699.00</span></span><br><span class="line">[products <span class="string">valueForKeyPath:</span>@<span class="string">"@min.launchedOn"</span>];</span><br></pre></td></tr></table></figure>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">To <span class="built_in">get</span> <span class="operator">the</span> aggregate <span class="built_in">value</span> <span class="operator">of</span> <span class="operator">an</span> array <span class="operator">or</span> <span class="built_in">set</span> <span class="operator">of</span> NSNumbers, simply pass self <span class="keyword">as</span> <span class="operator">the</span> key path <span class="keyword">after</span> <span class="operator">the</span> operator,</span><br><span class="line">e.g. [@[@(<span class="number">1</span>), @(<span class="number">2</span>), @(<span class="number">3</span>)] valueForKeyPath:@<span class="string">"@max.self "</span>]</span><br></pre></td></tr></table></figure>
<h3 id="Object_Operators">Object Operators</h3><p>@unionOfObjects / @distinctUnionOfObjects</p>
<figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="name">NSArray</span> *<span class="atom">inventory</span> = @[<span class="atom">iPhone5</span>, <span class="atom">iPhone5</span>, <span class="atom">iPhone5</span>, <span class="atom">iPadMini</span>, <span class="atom">macBookPro</span>, <span class="atom">macBookPro</span>];</span><br><span class="line">[<span class="atom">inventory</span> <span class="atom">valueForKeyPath</span>:@<span class="string">"@unionOfObjects.name"</span>];</span><br><span class="line"></span><br><span class="line">[<span class="atom">inventory</span> <span class="atom">valueForKeyPath</span>:@<span class="string">"@distinctUnionOfObjects.name"</span>];</span><br><span class="line">// <span class="string">"iPhone 5"</span>, <span class="string">"iPad mini"</span>, <span class="string">"MacBook Pro"</span></span><br></pre></td></tr></table></figure>
<h3 id="Array_and_Set_Operators">Array and Set Operators</h3><ol>
<li>@distinctUnionOfArrays / @unionOfArrays</li>
<li>@distinctUnionOfSets / </li>
</ol>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">telecomStoreInventory = <span class="variable">@[</span>iPhone5, iPhone5, iPadMini];</span><br><span class="line"></span><br><span class="line">[<span class="variable">@[</span>appleStoreInventory, telecomStoreInventory] valueForKeyPath:<span class="variable">@"</span><span class="variable">@distinctUnionOfArrays</span>.name<span class="string">"];</span></span><br></pre></td></tr></table></figure>
<p>KVC Collection Operators are a must-know for anyone wanting to save a few extra lines of code and look cool in the process.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Key-Value_Coding_&amp;&amp;_Collection_Operators">Key-Value Coding &amp;&amp; Collection Operators</h2><blockquote>
<p>KVC Collection Operators allows actions to be performed on a collection using key path notation in valueForKeyPath:. @’s in a key path denote an aggregate function whose result can be returned or chained, just like any other key path.</p>
</blockquote>
<h3 id="Simple_Collection_Operators">Simple Collection Operators</h3><ol>
<li>@count: Returns the number of objects in the collection.</li>
<li>@sum: Converts each object in the collection to a double, computes the sum, and returns the sum.</li>
<li>@avg: Takes the double value of each object in the collection, and returns the average value.</li>
<li>@max: Determines the maximum value using compare:. Objects must support mutual comparison for this to work.</li>
<li>@min: Same as @max, but returns the minimum value.</li>
</ol>]]>
    
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[C Storage Classes]]></title>
    <link href="http://ytlvy.com/2015/06/06/c-storage-classes/"/>
    <id>http://ytlvy.com/2015/06/06/c-storage-classes/</id>
    <published>2015-06-06T12:49:35.000Z</published>
    <updated>2015-06-06T16:05:20.000Z</updated>
    <content type="html"><![CDATA[<h2 id="C_Storage_Classes">C Storage Classes</h2><p>There are 4 storage classes in C: auto, register, static &amp; extern.</p>
<h3 id="static">static</h3><p>When it comes to storage classes, static means one of two things.</p>
<ol>
<li>A static variable inside a method or function retains its value between invocations.</li>
<li>A static variable declared globally can called by any function or method, so long as those functions appear in the same file as the static variable. The same goes for static functions.</li>
</ol>
<h3 id="Static_Singletons">Static Singletons</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+ (instancetype)sharedInstance&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">id</span> _sharedInstance = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">    dispath_once(&amp;onceToken, ^&#123;</span><br><span class="line">        _sharedInstance = [[<span class="keyword">self</span> alloc] init];</span><br><span class="line">        <span class="comment">//any config</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">return</span> _sharedInstance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="extern">extern</h3><p>Whereas static makes functions and variables globally visible within a particular file, extern makes them visible globally to all files.</p>
<h4 id="Global_String_Constants">Global String Constants</h4><p>Any time your application uses a string constant in a public interface, it should be declared as an external string constant. This is especially true of NSNotification names, NSError domains, and keys in userInfo dictionaries.<br>Declare an extern NSString <em> const in a public header, and define that NSString </em> const in the implementation:</p>
<p>AppConstants.h<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> kAppErrorDomain;</span><br></pre></td></tr></table></figure></p>
<p>AppConstants.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> * <span class="keyword">const</span> kAppErrorDomain = <span class="string">@"com.example.yourapp.error"</span>;</span><br></pre></td></tr></table></figure></p>
<h4 id="Public_Functions">Public Functions</h4><p>TransactionStateMachine.h<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSUInteger</span>, TransactionState) &#123;</span><br><span class="line">    TransactionOpened,</span><br><span class="line">    TransactionPending,</span><br><span class="line">    TransactionClosed,</span><br><span class="line">&#125;!;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">NSString</span> * <span class="built_in">NSStringFromTransactionState</span>(TransactionState state);</span><br></pre></td></tr></table></figure></p>
<p>TransactionStateMachine.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *</span><br><span class="line">  <span class="built_in">NSStringFromTransactionState</span>(TransactionState state) &#123;</span><br><span class="line">  <span class="keyword">switch</span> (state) &#123;</span><br><span class="line">    <span class="keyword">case</span> TransactionOpened: <span class="keyword">return</span> <span class="string">@"Opened"</span></span><br><span class="line">    <span class="keyword">case</span> TransactionPending: <span class="keyword">return</span> <span class="string">@"Pending"</span>;</span><br><span class="line">    <span class="keyword">case</span> TransactionClosed: <span class="keyword">return</span> <span class="string">@"Closed"</span>;</span><br><span class="line">    <span class="keyword">default</span>: <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="C_Storage_Classes">C Storage Classes</h2><p>There are 4 storage classes in C: auto, register, static &amp; extern.</p>
<h3 id="static">static</h3><p>When it comes to storage classes, static means one of two things.</p>
<ol>
<li>A static variable inside a method or function retains its value between invocations.</li>
<li>A static variable declared globally can called by any function or method, so long as those functions appear in the same file as the static variable. The same goes for static functions.</li>
</ol>
<h3 id="Static_Singletons">Static Singletons</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+ (instancetype)sharedInstance&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">id</span> _sharedInstance = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">    dispath_once(&amp;onceToken, ^&#123;</span><br><span class="line">        _sharedInstance = [[<span class="keyword">self</span> alloc] init];</span><br><span class="line">        <span class="comment">//any config</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">return</span> _sharedInstance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="C" scheme="http://ytlvy.com/categories/C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ios encodings]]></title>
    <link href="http://ytlvy.com/2015/06/06/ios-encodings/"/>
    <id>http://ytlvy.com/2015/06/06/ios-encodings/</id>
    <published>2015-06-06T12:48:05.000Z</published>
    <updated>2015-06-06T16:05:15.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Type_Encodings">Type Encodings</h2><table>
<thead>
<tr>
<th>Code</th>
<th>Meaning   </th>
</tr>
</thead>
<tbody>
<tr>
<td> c</td>
<td>A char                                           </td>
</tr>
<tr>
<td> i</td>
<td>An int                                           </td>
</tr>
<tr>
<td> s</td>
<td>A short                                          </td>
</tr>
<tr>
<td> l</td>
<td>A longl is treated as a 32-bit quantity on 64-bit programs.</td>
</tr>
<tr>
<td> q</td>
<td>A long long                                      </td>
</tr>
<tr>
<td> C</td>
<td>An unsigned char                                 </td>
</tr>
<tr>
<td> I</td>
<td>An unsigned int                                  </td>
</tr>
<tr>
<td> S</td>
<td>An unsigned short                                </td>
</tr>
<tr>
<td> L</td>
<td>An unsigned long                                 </td>
</tr>
<tr>
<td> Q</td>
<td>An unsigned long long                            </td>
</tr>
<tr>
<td> f</td>
<td>A float                                          </td>
</tr>
<tr>
<td> d</td>
<td>A double                                         </td>
</tr>
<tr>
<td> B</td>
<td>A C++ bool or a C99 _Bool                        </td>
</tr>
<tr>
<td> v</td>
<td>A void                                           </td>
</tr>
<tr>
<td> *</td>
<td>A character string (char *)                      </td>
</tr>
<tr>
<td> @</td>
<td>An object (whether statically typed or typed id) </td>
</tr>
<tr>
<td> #</td>
<td>A class object (Class)                           </td>
</tr>
<tr>
<td> :</td>
<td>A method selector (SEL)                          </td>
</tr>
<tr>
<td> [array type]</td>
<td>An array                                         </td>
</tr>
<tr>
<td> {name=type…}</td>
<td>A structure                                      </td>
</tr>
<tr>
<td> (name=type…)</td>
<td>A union                                          </td>
</tr>
<tr>
<td> bnum</td>
<td>A bit field of num bits                          </td>
</tr>
<tr>
<td> ^type</td>
<td>A pointer to type                                </td>
</tr>
<tr>
<td> ?</td>
<td>An unknown type (used for function pointers)     </td>
</tr>
</tbody>
</table>
<a id="more"></a>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"int         : %s"</span>, @encode(<span class="keyword">int</span>));                       <span class="comment">//i</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"float       : %s"</span>, @encode(<span class="keyword">float</span>));                     <span class="comment">//f</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"float *     : %s"</span>, @encode(<span class="keyword">float</span>*));                    <span class="comment">//^f</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"char        : %s"</span>, @encode(<span class="keyword">char</span>));                      <span class="comment">//c</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"char *      : %s"</span>, @encode(<span class="keyword">char</span> *));                    <span class="comment">//*</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"BOOL        : %s"</span>, @encode(<span class="built_in">BOOL</span>));                      <span class="comment">//c</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"void        : %s"</span>, @encode(<span class="keyword">void</span>));                      <span class="comment">//v</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"void *      : %s"</span>, @encode(<span class="keyword">void</span> *));                    <span class="comment">//^v</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"NSObject *  : %s"</span>, @encode(<span class="built_in">NSObject</span> *));                <span class="comment">//@</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"NSObject    : %s"</span>, @encode(<span class="built_in">NSObject</span>));                  <span class="comment">//#</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"[NSObject class]  : %s"</span>, @encode(<span class="keyword">typeof</span>([<span class="built_in">NSObject</span> class])));  <span class="comment">//&#123;NSObject=#&#125;</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"NSError **  : %s"</span>, @encode(<span class="keyword">typeof</span>(<span class="built_in">NSError</span> **)));        <span class="comment">//^@</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> intArray[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"int[]       : %s"</span>, @encode(<span class="keyword">typeof</span>(intArray)));          <span class="comment">//[5i]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> floatArray[<span class="number">3</span>] = &#123;<span class="number">0.1</span>f, <span class="number">0.2</span>f, <span class="number">0.3</span>f&#125;; </span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"float[]     : %s"</span>, @encode(<span class="keyword">typeof</span>(floatArray)));        <span class="comment">//[3f]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> _<span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="keyword">short</span> a;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> b;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> c;</span><br><span class="line">&#125; Struct;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"struct     : %s"</span>, @encode(<span class="keyword">typeof</span>(Struct)));             <span class="comment">//&#123;_struct=sqQ&#125;</span></span><br></pre></td></tr></table></figure>
<p>There are some interesting takeaways from this:</p>
<ol>
<li><p>Whereas the standard encoding for pointers is a preceding ^, char <em> gets its own code: </em>. This makes sense conceptually, since C strings are thought to be entities in and of themselves, rather than a pointer to something else.</p>
</li>
<li><p>BOOL is c, rather than i, as one might expect. Reason being, char is smaller than an int, and when Objective-C was originally designed in the 80’s, bits (much like the US Dollar) were more valuable than they are today.</p>
</li>
<li><p>Passing NSObject directly yields #. However, passing [NSObject class] yields a struct named NSObject with a single class field. That is, of course, the isa field, which all NSObject instances have to signify their type.</p>
</li>
</ol>
<h2 id="Method_Encodings">Method Encodings</h2><p>type qualifiers for methods declared in a protocol<br> Code    | Meaning<br> ————|————<br> r       | const<br> n       | in<br> N       | inout<br> o       | out<br> O       | bycopy<br> R       | byref<br> V       | oneway   </p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Type_Encodings">Type Encodings</h2><table>
<thead>
<tr>
<th>Code</th>
<th>Meaning   </th>
</tr>
</thead>
<tbody>
<tr>
<td> c</td>
<td>A char                                           </td>
</tr>
<tr>
<td> i</td>
<td>An int                                           </td>
</tr>
<tr>
<td> s</td>
<td>A short                                          </td>
</tr>
<tr>
<td> l</td>
<td>A longl is treated as a 32-bit quantity on 64-bit programs.</td>
</tr>
<tr>
<td> q</td>
<td>A long long                                      </td>
</tr>
<tr>
<td> C</td>
<td>An unsigned char                                 </td>
</tr>
<tr>
<td> I</td>
<td>An unsigned int                                  </td>
</tr>
<tr>
<td> S</td>
<td>An unsigned short                                </td>
</tr>
<tr>
<td> L</td>
<td>An unsigned long                                 </td>
</tr>
<tr>
<td> Q</td>
<td>An unsigned long long                            </td>
</tr>
<tr>
<td> f</td>
<td>A float                                          </td>
</tr>
<tr>
<td> d</td>
<td>A double                                         </td>
</tr>
<tr>
<td> B</td>
<td>A C++ bool or a C99 _Bool                        </td>
</tr>
<tr>
<td> v</td>
<td>A void                                           </td>
</tr>
<tr>
<td> *</td>
<td>A character string (char *)                      </td>
</tr>
<tr>
<td> @</td>
<td>An object (whether statically typed or typed id) </td>
</tr>
<tr>
<td> #</td>
<td>A class object (Class)                           </td>
</tr>
<tr>
<td> :</td>
<td>A method selector (SEL)                          </td>
</tr>
<tr>
<td> [array type]</td>
<td>An array                                         </td>
</tr>
<tr>
<td> {name=type…}</td>
<td>A structure                                      </td>
</tr>
<tr>
<td> (name=type…)</td>
<td>A union                                          </td>
</tr>
<tr>
<td> bnum</td>
<td>A bit field of num bits                          </td>
</tr>
<tr>
<td> ^type</td>
<td>A pointer to type                                </td>
</tr>
<tr>
<td> ?</td>
<td>An unknown type (used for function pointers)     </td>
</tr>
</tbody>
</table>]]>
    
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[octopress tutorials]]></title>
    <link href="http://ytlvy.com/2015/06/06/octopress-tutorials/"/>
    <id>http://ytlvy.com/2015/06/06/octopress-tutorials/</id>
    <published>2015-06-06T06:05:03.000Z</published>
    <updated>2015-06-06T16:17:50.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Octopress">Octopress</h2><h3 id="官方文档">官方文档</h3><p><a href="http://octopress.org/docs/setup/" target="_blank" rel="external">官方文档</a></p>
<h3 id="准备环境">准备环境</h3><p>需要ruby1.9以上,可以选择用rbenv来安装多版本ruby.</p>
<h4 id="安装rbenv">安装rbenv</h4> <figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span>update</span><br><span class="line"><span class="keyword">brew </span>install rbenv</span><br><span class="line"><span class="keyword">brew </span>install ruby-<span class="keyword">build</span><br><span class="line"></span></span><br><span class="line"><span class="label">rbenv</span> install <span class="number">1</span>.<span class="number">9</span>.<span class="number">3</span>-<span class="literal">p0</span></span><br><span class="line"><span class="label">rbenv</span> local <span class="number">1</span>.<span class="number">9</span>.<span class="number">3</span>-<span class="literal">p0</span></span><br><span class="line"><span class="label">rbenv</span> rehash</span><br></pre></td></tr></table></figure>
<p>你有可能需要安装老版本的GCC编译器才能顺利安装Ruby 1.9.3:<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span>tap homebrew/dupes</span><br><span class="line"><span class="keyword">brew </span>install apple-gcc42</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="安装Octopress">安装Octopress</h3><h4 id="下载代码">下载代码</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="string">git:</span><span class="comment">//github.com/imathis/octopress.git octopress</span></span><br></pre></td></tr></table></figure>
<p>修改Gemfile源为:<a href="http://ruby.taobao.org" target="_blank" rel="external">http://ruby.taobao.org</a><br>修改系统gem源<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gem sources -l</span><br><span class="line">gem sources -r <span class="keyword">https</span>://rubygems.org    <span class="comment">#删除 http://rubygems.org</span></span><br><span class="line">gem sources -<span class="operator">a</span> <span class="keyword">http</span>://ruby.taobao.org  <span class="comment">#添加 http://ruby.taobao.org</span></span><br></pre></td></tr></table></figure></p>
<h4 id="安装依赖库">安装依赖库</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">cd</span> octopress</span><br><span class="line"><span class="label">gem</span> install <span class="keyword">bundler</span><br><span class="line"></span><span class="keyword">bundle </span>install</span><br></pre></td></tr></table></figure>
<p>如使用rbenv<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">gem</span> install <span class="keyword">bundler</span><br><span class="line"></span><span class="label">rbenv</span> rehash</span><br><span class="line"><span class="keyword">bundle </span>install</span><br></pre></td></tr></table></figure></p>
<h4 id="安装默认主题">安装默认主题</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rake <span class="keyword">install</span></span><br></pre></td></tr></table></figure>
<h4 id="新文章">新文章</h4><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rake <span class="keyword">new</span><span class="number">_p</span>ost[<span class="string">"Welcome"</span>]</span><br></pre></td></tr></table></figure>
<h4 id="编译预览">编译预览</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">rake</span> generate </span><br><span class="line">rake preview</span><br></pre></td></tr></table></figure>
<h3 id="部署到github">部署到github</h3><h4 id="github_创建同名仓库">github 创建同名仓库</h4><h4 id="本地设置">本地设置</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">rake</span> setup_github_pages</span><br></pre></td></tr></table></figure>
<p>根据提示, 输入项目路径: git@github.com:superman/super.github.io.git</p>
<h4 id="同步代码到github">同步代码到github</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">git</span> <span class="keyword">add </span>.</span><br><span class="line"><span class="label">git</span> commit -m <span class="string">"first commit"</span></span><br><span class="line"><span class="label">git</span> <span class="keyword">push </span>origin source   </span><br><span class="line"><span class="label">rake</span> deploy <span class="label">#rake</span> deploy 会直接 <span class="keyword">push </span>Octopress目录中 master 分支</span><br></pre></td></tr></table></figure>
<h3 id="写博流程">写博流程</h3><p>Octopress 博文必须存储在<code>source/_posts</code>目录下，并且需要按照Jekyll的命名规范对文章进行命名：<code>YYYY-MM-DD-post-title.markdown</code>。文章的名字会被当做url的一部分，而其中的日期用于对博文的区分和排序。创建和部署博文的一个完整流程：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>rake new_post[<span class="string">"New Post"</span>]</span><br><span class="line"><span class="variable">$ </span>rake generate</span><br><span class="line"><span class="variable">$ </span>git add .</span><br><span class="line"><span class="variable">$ </span>git commit -am <span class="string">"add comment here."</span> </span><br><span class="line"><span class="variable">$ </span>git push origin source</span><br><span class="line"><span class="variable">$ </span>rake deploy</span><br></pre></td></tr></table></figure></p>
<h3 id="Octopress_DIY_定制">Octopress DIY 定制</h3><h4 id="添加侧边栏文章分类">添加侧边栏文章分类</h4><ol>
<li>在 plugins 目录中创建<code>category_list_tag.rb</code>文件，文件内容如下：<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Jekyll</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">CategoryListTag</span> <span class="inheritance">&lt; <span class="parent">Liquid::Tag</span></span></span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> </span>render(context)</span><br><span class="line">      html = <span class="string">""</span></span><br><span class="line">      categories = context.registers[<span class="symbol">:site</span>].categories.keys</span><br><span class="line">      categories.sort.each <span class="keyword">do</span> |category|</span><br><span class="line">        posts_in_category = context.registers[<span class="symbol">:site</span>].categories[category].size</span><br><span class="line">        category_dir = context.registers[<span class="symbol">:site</span>].config[<span class="string">'category_dir'</span>]</span><br><span class="line">        category_url = <span class="constant">File</span>.join(category_dir, category.gsub(<span class="regexp">/_|\P&#123;Word&#125;/</span>, <span class="string">'-'</span>).gsub(<span class="regexp">/-&#123;2,&#125;/</span>, <span class="string">'-'</span>).downcase)</span><br><span class="line">        html &lt;&lt; <span class="string">"&lt;li class='category'&gt;&lt;a href='/<span class="subst">#&#123;category_url&#125;</span>/'&gt;<span class="subst">#&#123;category&#125;</span> (<span class="subst">#&#123;posts_in_category&#125;</span>)&lt;/a&gt;&lt;/li&gt;\n"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      html</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="constant">Liquid::Template</span>.register_tag(<span class="string">'category_list'</span>, <span class="constant">Jekyll::CategoryListTag</span>)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>侧边栏的 DIY 定制一般都是新建一个 xxx.html 文件，放在source<code>\_includes\custom\asides</code>目录下，然后文件模板必须为：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">section</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">h1</span>&gt;</span>xxx<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--添加代码--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">section</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>然后在 <code>_config.yml</code>文件中，找到default_asides数组，添加<code>custom/asides/xxx.html</code> 。侧边栏的排序就根据数组的排序进行 DIY</p>
<ol>
<li><p>把下面内容添加到<code>source/_includes/asides/category_list.html</code>文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">section</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="title">h1</span>&gt;</span>文章分类<span class="tag">&lt;/<span class="title">h1</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="title">ul</span> <span class="attribute">id</span>=<span class="value">"categories"</span>&gt;</span> </span><br><span class="line">    大括号%   category_list  %大括号 </span><br><span class="line">    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="title">section</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>修改<code>_config.yml</code>文件，用 command+f 找到<code>default_asides</code>，然后添加<code>asides/category_list.html</code>，值之间以逗号隔开。</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">default_asides:</span> [asides<span class="regexp">/category_list.html, asides/</span>recent_posts.html]</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="添加社会化评论">添加社会化评论</h4><h5 id="Disqus">Disqus</h5><ol>
<li><p>登录 Disqus，创建一个账号，然后点击 <code>Add Disqus to your site</code>，输入 <code>Site name</code> ，例如 boy，然后点击 Finish registration。这里页面会自动生成shortname，记起来，待会有用。</p>
</li>
<li><p>打开_config.yml文件，找到</p>
</li>
</ol>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># Disqus Comments </span></span><br><span class="line"><span class="label">disqus_short_name:</span>  </span><br><span class="line"><span class="label">disqus_show_comment_count:</span> false</span><br></pre></td></tr></table></figure>
<p>设置 disqus_short_name 为刚刚创建的 Disqus 生成的 shortname，例如 boy，<br>把<code>false</code>改为<code>true</code>。特别注意，冒号后面要空出一个空格。</p>
<h5 id="多说">多说</h5><p>用微博登陆多说，然后创建个人站点<br>在 _config.yml 中添加</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># duoshuo comments</span></span><br><span class="line"><span class="label">duoshuo_comments:</span> true</span><br><span class="line"><span class="label">duoshuo_short_name:</span> yourshortname</span><br></pre></td></tr></table></figure>
<p>在 <code>source/_layouts/post.html</code> 中的 disqus代码<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">if</span> site.disqus_short_name and page.comments == true %&#125;</span><span class="xml"> </span><br><span class="line">     <span class="tag">&lt;<span class="title">section</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="title">h1</span>&gt;</span>Comments<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"disqus_thread"</span> <span class="attribute">aria-live</span>=<span class="value">"polite"</span>&gt;</span></span><span class="template_tag">&#123;% <span class="keyword">include</span> post/disqus_thread.html %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="title">section</span>&gt;</span></span><br><span class="line">   </span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p>下方添加多说评论模块</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">if</span> site.duoshuo_short_name and site.duoshuo_comments == true and page.comments == true %&#125;</span><span class="xml"></span><br><span class="line">  <span class="tag">&lt;<span class="title">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h1</span>&gt;</span>Comments<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"comments"</span> <span class="attribute">aria-live</span>=<span class="value">"polite"</span>&gt;</span></span><span class="template_tag">&#123;% <span class="keyword">include</span> post/duoshuo.html %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">section</span>&gt;</span></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>在<code>/source/_includes/post/</code>目录下创建<code>duoshuo.html</code>， 添加代码</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"ds-thread"</span> <span class="attribute">data-title</span>=<span class="value">"</span></span></span><span class="template_tag">&#123;% <span class="keyword">if</span> site.titlecase %&#125;</span><span class="xml"><span class="tag"><span class="value"></span></span></span><span class="variable">&#123;&#123; page.title | titlecase &#125;&#125;</span><span class="xml"><span class="tag"><span class="value"></span></span></span><span class="template_tag">&#123;% <span class="keyword">else</span> %&#125;</span><span class="xml"><span class="tag"><span class="value"></span></span></span><span class="variable">&#123;&#123; page.title &#125;&#125;</span><span class="xml"><span class="tag"><span class="value"></span></span></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"><span class="tag"><span class="value">"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="kotlin"></span><br><span class="line">      <span class="variable"><span class="keyword">var</span> duoshuoQuery</span> = &#123;short_name:<span class="string">"</span></span></span><span class="variable">&#123;&#123; site.duoshuo_short_name &#125;&#125;</span><span class="xml"><span class="vim"><span class="string">"&#125;;</span><br><span class="line"></span>      (<span class="function"><span class="keyword">function</span><span class="params">()</span> &#123;</span></span><br><span class="line">        var <span class="keyword">ds</span> = document.createElement(<span class="string">'script'</span>);</span><br><span class="line">        <span class="keyword">ds</span>.<span class="built_in">type</span> = <span class="string">'text/javascript'</span>;<span class="keyword">ds</span>.async = true;</span><br><span class="line">        <span class="keyword">ds</span>.src = <span class="string">'http://static.duoshuo.com/embed.js'</span>;</span><br><span class="line">        <span class="keyword">ds</span>.charset = <span class="string">'UTF-8'</span>;</span><br><span class="line">        (document.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] </span><br><span class="line">        || document.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(<span class="keyword">ds</span>);</span><br><span class="line">      &#125;)();</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>修改_includes/article.html 文件，在</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> site.disqus_short_name and page.comments != <span class="literal">false</span> and post.comments != <span class="literal">false</span> and site.disqus_show_comment_count == <span class="literal">true</span> %&#125;</span><br><span class="line">        | <span class="xml"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"&#123;% if index %&#125;&#123;&#123; root_url &#125;&#125;&#123;&#123; post.url &#125;&#125;&#123;% endif %&#125;#disqus_thread"</span>&gt;</span>Comments<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">       &#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>
<p>下面添加如下代码</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% if site.duoshuo_short_name and page.comments != false and post.comments != false and site.duoshuo_comments == true %&#125;</span><br><span class="line">   &lt;a href="&#123;% if index %&#125;&#123;&#123; root_url &#125;&#125;&#123;&#123; post.url &#125;&#125;&#123;% endif %&#125;#comments"&gt;Comments&lt;/a&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="首页样式修改">首页样式修改</h4><p>source/index.html</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- This loops through the paginated posts</span><br><span class="line">&#123;% <span class="keyword">for</span> post <span class="keyword">in</span> paginator.posts %&#125;</span><br><span class="line">  &lt;h1&gt;<span class="xml"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"&#123;&#123; post.url &#125;&#125;"</span>&gt;</span>&#123;&#123; post.title &#125;&#125;<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"author"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"date"</span>&gt;</span>&#123;&#123; post.date &#125;&#125;<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">    &#123;&#123; post.content &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125; --&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="修改导航栏">修改导航栏</h4><p>导航栏的setting在<code>source\_includes\custom\navigation.html</code></p>
<p>我们可以将 Blog 和 Archives 修改为首页和归档，也可以在此添加一个标签页，此时应使用命令<code>rake new_page[&#39;about&#39;]</code>创建一个页面，页面路径为<code>source\about\index.markdown</code>;</p>
<p>修改后的文件如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">ul</span> <span class="attribute">class</span>=<span class="value">"main-navigation"</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/blog/archives"</span>&gt;</span>归档<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="添加个人二维码">添加个人二维码</h4><p>在侧边栏显示二维码，下载<img src="https://github.com/sailor79/Octopress-dynamic-QR-Code-aside" alt="插件">， 将 <code>qrcode.html</code> 放入 <code>source/_includes/custom/asides/</code>中， 在 <code>_config.yml</code> 中<code>default_asides</code> 添加 <code>custom/asides/qrcode.html</code>。 然后打开<code>qrcode.html</code>，做<code>image src</code>的修改.或者将 <code>qrcode.html</code> 代码添加到你想展示的页面的HTML文件中亦可。</p>
<h4 id="添加社会化分享">添加社会化分享</h4><p>在www.addthis.com上获取分享按钮代码，粘贴到 <code>source/_includes/post/sharing.html</code> 中，例如我的代码如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"sharing"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- AddThis Button BEGIN --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"addthis_toolbox addthis_default_style addthis_32x32_style"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"addthis_button_sinaweibo"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"addthis_button_facebook"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"addthis_button_twitter"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"addthis_button_google_plusone_share"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"addthis_button_delicious"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"addthis_button_compact"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"addthis_counter addthis_bubble_style"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">src</span>=<span class="value">"//s7.addthis.com/js/300/addthis_widget.js#pubid=undefined"</span> <span class="attribute">async</span>=<span class="value">"async"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- AddThis Button END --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="文章只显示部分正文">文章只显示部分正文</h4><p>在markdown非代码段, 添加<!--more-->, 其后的内容将不会显示，只会显示<!--more-->以上部分，而且会在文章尾部添加 Read On超链接，如果要更改超链接内容，可以在 <code>_config.yml</code>中找到 <code>Read On</code>，然后修改为“<code>继续阅读</code>”。</p>
<h4 id="添加百度统计或CNZZ统计">添加百度统计或CNZZ统计</h4><p>到百度统计或CNZZ统计上注册账号，然后添加脚本文件到<code>source/_includes/after_footer.html</code>文件中</p>
<h4 id="安装第三方主题">安装第三方主题</h4><p>比较常见的有<code>slash</code>主题。Slash is a minimal theme for Octopress.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> octopress</span><br><span class="line">$ git <span class="built_in">clone</span> git://github.com/tommy351/Octopress-Theme-Slash.git .themes/slash</span><br><span class="line">$ rake install[<span class="string">'slash'</span>]</span><br><span class="line">$ rake generate</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes" alt="第三方主题汇总"></p>
<h3 id="Octopress_优化">Octopress 优化</h3><h4 id="替换Google_JS公共库">替换Google JS公共库</h4><p>Octopress 默认使用的是 Google 的 JS 公共库地址，加载的过程特别的慢。所以我们要把它改为百度的 JS 公共库 ，需要把<code>/source/_includes/head.html</code> 文件中的 Google 公共库地址改为：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"//libs.baidu.com/jquery/1.7.2/jquery.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<h4 id="去掉Twitter">去掉Twitter</h4><p>把在根目录下的 <code>_config.yml</code>文件中 Twitter 内容给注释掉。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Twitter</span><br><span class="line">#twitter_user:</span><br><span class="line">#twitter_tweet_button: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<p>把 <code>\source\_includes\after_footer.html</code> 文件中的 Twitter 内容给注释掉：</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span><span class="template_tag">&#123;% <span class="keyword">include</span> twitter_sharing.html %&#125;</span><span class="xml"><span class="comment">--&gt;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="删除_Google_font">删除 Google font</h4><p>把在<code>\source\_includes\custom\head.html</code> 中的Google font样式给删除：</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link <span class="variable">href=</span><span class="string">"//fonts.googleapis.com/css?family=PT+Serif:regular,italic,bold,bolditalic"</span> <span class="variable">rel=</span><span class="string">"stylesheet"</span> <span class="variable">type=</span><span class="string">"text/css"</span>&gt;</span><br><span class="line">&lt;link <span class="variable">href=</span><span class="string">"//fonts.googleapis.com/css?family=PT+Sans:regular,italic,bold,bolditalic"</span> <span class="variable">rel=</span><span class="string">"stylesheet"</span> <span class="variable">type=</span><span class="string">"text/css"</span>&gt;</span><br></pre></td></tr></table></figure>
<h4 id="搜索优化">搜索优化</h4><p>为了让自己搭建的博客更容易被搜索引擎搜到，最好将网站地址提交给各大搜索引擎，下面有两个连接搜集了各个搜索引擎的网站提交入口：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http:</span><span class="comment">//urlc.cn/tool/addurl.html</span></span><br><span class="line"><span class="string">http:</span><span class="comment">//tool.lusongsong.com/addurl.html</span></span><br></pre></td></tr></table></figure></p>
<p>markdown添加SEO信息</p>
<figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">tags</span>: <span class="string">[octopress,seo]</span></span><br><span class="line"><span class="attribute">keywords</span>: <span class="string"> octopress, analytics</span></span><br><span class="line"><span class="attribute">description</span>: <span class="string">如何搭建Octopress博客</span></span><br></pre></td></tr></table></figure>
<h3 id="GitCafe_备份">GitCafe 备份</h3><p><img src="https://gitcafe.com/GitCafe/Help/wiki/Pages-%E7%9B%B8%E5%85%B3%E5%B8%AE%E5%8A%A9#wiki" alt="官方教程"></p>
<h4 id="在GitCafe上新建一个博客项目">在GitCafe上新建一个博客项目</h4><p>创建与用户名相同名称的项目</p>
<h4 id="提交到_gitcafe">提交到 gitcafe</h4><p>方法一 设置多个Git Remote源<br>对于Octopress，我们只需要每次提交网站内容时，执行完 rake deploy之后，再执行以下脚本即可</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> _deploy</span><br><span class="line">git remote add gitcafe git@gitcafe.com:tangqiaoboy/tangqiaoboy.git &gt;&gt; /dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">git push -u gitcafe master:gitcafe-pages</span><br></pre></td></tr></table></figure>
<p>方法二 修改Rakefile<br>在Rakefile第269行后增加如下代码, <code>rake deploy</code>自动提交</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">system <span class="string">"git remote add gitcafe git@gitcafe.com:tangqiaoboy/tangqiaoboy.git &gt;&gt; /dev/null 2&gt;&amp;1"</span></span><br><span class="line">system <span class="string">"git push -u gitcafe master:gitcafe-pages"</span></span><br></pre></td></tr></table></figure>
<h4 id="gitcafe_设置域名">gitcafe 设置域名</h4><p>GitCafe的自定义域名设置比github要友好得多，它不但提供了图形界面设置，并且支持同时设置多个域名。在<code>项目管理</code>–&gt;<code>域名管理</code>中，我们可以找到相应的设置项，如下所示：<br><img src="http://blog.devtang.com/images/gitcafe-set-domain.jpg" alt=""><br>在设置完之后，我们需要去域名解析的服务商那儿，将对应的域名用A记录类型，解析到117.79.146.98即可</p>
<h4 id="gitcafe">gitcafe</h4><p>270 line</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">system <span class="string">"git remote add gitcafe git@gitcafe.com:ytlvy/ytlvy.git &gt;&gt; /dev/null 2&gt;&amp;1"</span></span><br><span class="line">system <span class="string">"git push -u gitcafe master:gitcafe-pages"</span></span><br></pre></td></tr></table></figure>
<h3 id="Bug">Bug</h3><h4 id="当文章有多个标签时候，执行_rake_generate会出现下面情况">当文章有多个标签时候，执行 rake generate会出现下面情况</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">AppledeiMac:octopress apple$ rake generate</span><br><span class="line"><span class="comment">##Generating Site with Jekyll</span></span><br><span class="line">    write <span class="built_in">source</span>/stylesheets/screen.css</span><br><span class="line">Configuration file: /Users/apple/octopress/_config.yml</span><br><span class="line">            Source: <span class="built_in">source</span></span><br><span class="line">       Destination: public</span><br><span class="line">      Generating...</span><br><span class="line">  Liquid Exception: comparison of Array with Array failed <span class="keyword">in</span> _layouts/page.html</span><br></pre></td></tr></table></figure>
<p>解决办法是，在<code>source/_includes/custom/asides/tags.html</code>中把<code>limit</code>参数去掉。 </p>
<h4 id="另外，如果执行_rake_generate出现_Layout_&#39;nil&#39;">另外，如果执行 rake generate出现 <code>Layout &#39;nil&#39;</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Build Warning: Layout <span class="string">'nil'</span> requested <span class="keyword">in</span> tags/octopress/atom.xml does not exist.</span><br><span class="line">     Build Warning: Layout <span class="string">'nil'</span> requested <span class="keyword">in</span> tags/ios/atom.xml does not exist.</span><br></pre></td></tr></table></figure>
<p>修改以下文件中得 <code>layout: nil</code> 为 <code>layout: null</code></p>
<ul>
<li>source/atom.xml</li>
<li>source/robots.txt</li>
<li>source/_includes/custom/category_feed.xml</li>
</ul>
<h4 id="翻页bug">翻页bug</h4><p>修改<code>_config.yml</code> 中 <code>paginate_path</code> 由<code>\post\:num</code> 为 <code>:num</code></p>
<h4 id="typekit_加载403error">typekit 加载403error</h4><p>注册typekit账号, 在typekit中添加你自己域名信息<br><img src="http://help.typekit.com/customer/portal/attachments/62656" alt=""></p>
<p>获得自己的资源代码</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"//use.typekit.net/ilg6roq.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="julia"><span class="keyword">try</span>&#123;Typekit.load();&#125;<span class="keyword">catch</span>(<span class="literal">e</span>)&#123;&#125;</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Octopress">Octopress</h2><h3 id="官方文档">官方文档</h3><p><a href="http://octopress.org/docs/setup/">官方文档</a></p>
<h3 id="准备环境">准备环境</h3><p>需要ruby1.9以上,可以选择用rbenv来安装多版本ruby.</p>
<h4 id="安装rbenv">安装rbenv</h4> <figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span>update</span><br><span class="line"><span class="keyword">brew </span>install rbenv</span><br><span class="line"><span class="keyword">brew </span>install ruby-<span class="keyword">build</span><br><span class="line"></span></span><br><span class="line"><span class="label">rbenv</span> install <span class="number">1</span>.<span class="number">9</span>.<span class="number">3</span>-<span class="literal">p0</span></span><br><span class="line"><span class="label">rbenv</span> local <span class="number">1</span>.<span class="number">9</span>.<span class="number">3</span>-<span class="literal">p0</span></span><br><span class="line"><span class="label">rbenv</span> rehash</span><br></pre></td></tr></table></figure>
<p>你有可能需要安装老版本的GCC编译器才能顺利安装Ruby 1.9.3:<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span>tap homebrew/dupes</span><br><span class="line"><span class="keyword">brew </span>install apple-gcc42</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="blog" scheme="http://ytlvy.com/tags/blog/"/>
    
      <category term="Other" scheme="http://ytlvy.com/categories/Other/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ios BOOL / bool /   Boolean / NSCFBoolean]]></title>
    <link href="http://ytlvy.com/2015/06/05/ios-bool-slash-bool-slash-boolean-slash-nscfboolean/"/>
    <id>http://ytlvy.com/2015/06/05/ios-bool-slash-bool-slash-boolean-slash-nscfboolean/</id>
    <published>2015-06-05T08:14:34.000Z</published>
    <updated>2015-06-06T14:55:37.000Z</updated>
    <content type="html"><![CDATA[<h2 id="BOOL_bool_Boolean_NSCFBoolean">BOOL  bool   Boolean  NSCFBoolean</h2><h3 id="BOOL">BOOL</h3><blockquote>
<p>Objective-C defines BOOL to encode truth value. It is a typedef of a signed char, with the macros YES and NO to represent true and false, respectively.<br>On a 64-bit iOS, BOOL is defined as a bool, rather than signed char, which precludes the runtime from these type conversion errors.<br>0 is considered “false”, while any other value is considered “true”. Because NULL and nil have a value of 0, they are considered “false” as well.</p>
</blockquote>
<a id="more"></a>
<h3 id="The_Wrong_Answer_to_the_Wrong_Question">The Wrong Answer to the Wrong Question</h3><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function">BOOL <span class="title">different</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>However, because BOOL is typedef ‘d as a signed char on 32- bit architectures, this will not behave as expected:</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">different</span><span class="params">(<span class="number">11</span>, <span class="number">10</span>)</span></span> <span class="comment">// YES</span></span><br><span class="line"><span class="function"><span class="title">different</span><span class="params">(<span class="number">10</span>, <span class="number">11</span>)</span></span> <span class="comment">// NO (!)</span></span><br><span class="line"><span class="function"><span class="title">different</span><span class="params">(<span class="number">512</span>, <span class="number">256</span>)</span></span> <span class="comment">// NO (!)</span></span><br></pre></td></tr></table></figure>
<p><strong><em>Deriving truth value directly from an arithmetic operation is never a good idea</em></strong>. Use the == operator, or cast values into booleans with the ! (or !!) operator.</p>
<h3 id="The_Truth_About_NSNumber_and_BOOL">The Truth About NSNumber and BOOL</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NSLog(@<span class="string">"%@"</span>, [@(YES) <span class="class"><span class="keyword">class</span>]);</span></span><br><span class="line"><span class="comment">//__NSCFBoolean</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Header</th>
<th>True</th>
<th>False   </th>
</tr>
</thead>
<tbody>
<tr>
<td>BOOL</td>
<td>signed char / bool</td>
<td>objc.h</td>
<td>YES</td>
<td>NO      </td>
</tr>
<tr>
<td>bool</td>
<td>_Bool (int)</td>
<td>stdbool.h</td>
<td>TRUE</td>
<td>FALSE   </td>
</tr>
<tr>
<td>Boolean</td>
<td>unsigned char</td>
<td>MacTypes.h</td>
<td>TRUE</td>
<td>FALSE   </td>
</tr>
<tr>
<td>NSNumber</td>
<td>__NSCFBoolean</td>
<td>Foundation.h</td>
<td>@(YES)</td>
<td>@(NO)  </td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="BOOL_bool_Boolean_NSCFBoolean">BOOL  bool   Boolean  NSCFBoolean</h2><h3 id="BOOL">BOOL</h3><blockquote>
<p>Objective-C defines BOOL to encode truth value. It is a typedef of a signed char, with the macros YES and NO to represent true and false, respectively.<br>On a 64-bit iOS, BOOL is defined as a bool, rather than signed char, which precludes the runtime from these type conversion errors.<br>0 is considered “false”, while any other value is considered “true”. Because NULL and nil have a value of 0, they are considered “false” as well.</p>
</blockquote>]]>
    
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ios nil  Nil NULL NSNull]]></title>
    <link href="http://ytlvy.com/2015/06/05/ios-nil-slash-nil-slash-null-slash-nsnull/"/>
    <id>http://ytlvy.com/2015/06/05/ios-nil-slash-nil-slash-null-slash-nsnull/</id>
    <published>2015-06-05T02:23:26.000Z</published>
    <updated>2015-06-06T16:05:34.000Z</updated>
    <content type="html"><![CDATA[<h2 id="nil_Nil_NULL_NSNull">nil Nil NULL NSNull</h2><blockquote>
<p>C represents nothing as 0 for primitive values, and NULL for pointers (which is equivalent to 0 in a pointer context)<br>Objective-C builds on C’s representation of nothing by adding nil. nil is an object pointer to nothing. Although semantically distinct from NULL, they are equivalent to one another.<br>On the framework level, Foundation defines the NSNull class, which defines a single class method, +null, which returns a singleton NSNull instance. NSNull is different from nil or NULL, in that it is an actual object, rather than a zero value.<br>Additionally, in Foundation/NSObjCRuntime.h, Nil is defined as a class pointer to nothing. This lesser-known title- case cousin of nil doesn’t show up much very often, but it’s at least worth noting.</p>
</blockquote>
<a id="more"></a>
<h3 id="NSNull_Something_for_Nothing">NSNull Something for Nothing</h3><p>NSNull is used throughout Foundation and other system frameworks to skirt around the limitations of collections like NSArray and NSDictionary, which cannot contain nil values. NSNull effectively boxes NULL or nil values, so that they can be stored in collections:</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSMutableDictionary</span> *mutableDictionary = [<span class="built_in">NSMutableDictionary</span> dictionary];</span><br><span class="line">mutableDictionary[<span class="string">@"someKey"</span>] = [<span class="built_in">NSNull</span> null];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"Keys: %@"</span>, [mutableDictionary allKeys]);</span><br></pre></td></tr></table></figure>
<h3 id="representing_nothing">representing nothing</h3><table>
<thead>
<tr>
<th style="text-align:left">Symbol</th>
<th style="text-align:left">Value</th>
<th>Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">NULL</td>
<td style="text-align:left">(void *)0</td>
<td>literal null value for C pointers</td>
</tr>
<tr>
<td style="text-align:left">nil</td>
<td style="text-align:left">(id)0</td>
<td>literal null value for Objective-C objects</td>
</tr>
<tr>
<td style="text-align:left">Nil</td>
<td style="text-align:left">(Class)0</td>
<td>literal null value for Objective-C classes</td>
</tr>
<tr>
<td style="text-align:left">NSNull</td>
<td style="text-align:left">[NSNull null]</td>
<td>singleton object used to represent null</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="nil_Nil_NULL_NSNull">nil Nil NULL NSNull</h2><blockquote>
<p>C represents nothing as 0 for primitive values, and NULL for pointers (which is equivalent to 0 in a pointer context)<br>Objective-C builds on C’s representation of nothing by adding nil. nil is an object pointer to nothing. Although semantically distinct from NULL, they are equivalent to one another.<br>On the framework level, Foundation defines the NSNull class, which defines a single class method, +null, which returns a singleton NSNull instance. NSNull is different from nil or NULL, in that it is an actual object, rather than a zero value.<br>Additionally, in Foundation/NSObjCRuntime.h, Nil is defined as a class pointer to nothing. This lesser-known title- case cousin of nil doesn’t show up much very often, but it’s at least worth noting.</p>
</blockquote>]]>
    
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ios static formatter]]></title>
    <link href="http://ytlvy.com/2015/06/05/ios-static-formatter/"/>
    <id>http://ytlvy.com/2015/06/05/ios-static-formatter/</id>
    <published>2015-06-05T01:47:14.000Z</published>
    <updated>2015-06-06T16:05:28.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Re-Using_Formatter_Instances">Re-Using Formatter Instances</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)fooWithNumber: (<span class="built_in">NSNumber</span> *)num&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">NSNumberFormatter</span> *_formatter = <span class="literal">nil</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">  <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</span><br><span class="line">    _formatter = [[<span class="built_in">NSNumberFormatter</span> alloc] init];</span><br><span class="line">    [_formatter setNumberStyle: <span class="built_in">NSNumberFormatterDecimalStyle</span>];</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSString</span> *string = [_formatter stringFromNumber: number];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">NSNumberFormatter</span> *)numberFormatter &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">NSNumberFormatter</span> *_formatter = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</span><br><span class="line">        _formatter = [[<span class="built_in">NSNumberFormatter</span> alloc] init];</span><br><span class="line">        [_formatter setNumberStyle:</span><br><span class="line">          <span class="built_in">NSNumberFormatterDecimalStyle</span>];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> _formatter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Re-Using_Formatter_Instances">Re-Using Formatter Instances</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)fooWithNumber: (<span class="built_in">NSNumber</span> *)num&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">NSNumberFormatter</span> *_formatter = <span class="literal">nil</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">  <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</span><br><span class="line">    _formatter = [[<span class="built_in">NSNumberFormatter</span> alloc] init];</span><br><span class="line">    [_formatter setNumberStyle: <span class="built_in">NSNumberFormatterDecimalStyle</span>];</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSString</span> *string = [_formatter stringFromNumber: number];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ios CFStringTransform]]></title>
    <link href="http://ytlvy.com/2015/06/05/ios-cfstringtransform/"/>
    <id>http://ytlvy.com/2015/06/05/ios-cfstringtransform/</id>
    <published>2015-06-05T01:31:29.000Z</published>
    <updated>2015-06-05T01:32:59.000Z</updated>
    <content type="html"><![CDATA[<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">var mutableString = <span class="built_in">NSMutableString</span>(string: <span class="string">"Hello! こんにちは! สวัสดี! مرحبا! 您好!"</span>) as <span class="built_in">CFMutableStringRef</span></span><br><span class="line"><span class="built_in">CFStringTransform</span>(mutableString, <span class="literal">nil</span>, k<span class="built_in">CFStringTransformToLatin</span>, Boolean(<span class="number">0</span>))</span><br><span class="line"><span class="comment">//Hello! こんにちは! สวัสดี! مرحبا! 您好! → Hello! kon'nichiha! s̄wạs̄dī! mrḥbạ! nín hǎo!</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">CFStringTransform</span>(mutableString, <span class="literal">nil</span>, k<span class="built_in">CFStringTransformStripCombiningMarks</span>, Boolean(<span class="number">0</span>))</span><br><span class="line"><span class="comment">//Hello! kon'nichiha! s̄wạs̄dī! mrḥbạ! nín hǎo! → Hello! kon'nichiha! swasdi! mrhba! nin hao!</span></span><br><span class="line"></span><br><span class="line">let tokenizer = <span class="built_in">CFStringTokenizerCreate</span>(<span class="literal">nil</span>, mutableString, <span class="built_in">CFRangeMake</span>(<span class="number">0</span>, <span class="built_in">CFStringGetLength</span>(mutableString)), <span class="number">0</span>, <span class="built_in">CFLocaleCopyCurrent</span>())</span><br><span class="line"></span><br><span class="line">var mutableTokens: [String] = []</span><br><span class="line">var type: <span class="built_in">CFStringTokenizerTokenType</span></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    type = <span class="built_in">CFStringTokenizerAdvanceToNextToken</span>(tokenizer)</span><br><span class="line">    let range = <span class="built_in">CFStringTokenizerGetCurrentTokenRange</span>(tokenizer)</span><br><span class="line">    let token = <span class="built_in">CFStringCreateWithSubstring</span>(<span class="literal">nil</span>, mutableString, range) as <span class="built_in">NSString</span></span><br><span class="line">    mutableTokens<span class="variable">.append</span>(token)</span><br><span class="line">&#125; <span class="keyword">while</span> type != <span class="variable">.None</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//(hello, kon'nichiha, swasdi, mrhba, nin, hao)</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span ]]>
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
      <category term="Swift" scheme="http://ytlvy.com/categories/IOS/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Websocket Tunnel Over Cloud IDE]]></title>
    <link href="http://ytlvy.com/2015/05/31/websocket-tunnel-over-cloud-ide/"/>
    <id>http://ytlvy.com/2015/05/31/websocket-tunnel-over-cloud-ide/</id>
    <published>2015-05-31T01:29:57.000Z</published>
    <updated>2015-06-05T07:25:14.000Z</updated>
    <content type="html"><![CDATA[<h3 id="bbs">bbs</h3><blockquote>
<p><a href="https://groups.google.com/forum/#!forum/go-gost" target="_blank" rel="external">https://groups.google.com/forum/#!forum/go-gost</a></p>
</blockquote>
<h3 id="原理">原理</h3><blockquote>
<p>在平台中建立websocket服务器，将数据通过websocket传输给客户端实现一个tunnel</p>
</blockquote>
<h3 id="cloud_Ide">cloud Ide</h3><ul>
<li>Cloud 9：<a href="https://c9.io" target="_blank" rel="external">https://c9.io</a></li>
<li>Koding：<a href="https://koding.com/" target="_blank" rel="external">https://koding.com/</a></li>
<li>Nitrous：<a href="https://lite.nitrous.io/" target="_blank" rel="external">https://lite.nitrous.io/</a></li>
</ul>
<a id="more"></a>
<h3 id="server">server</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>wget <span class="symbol">https:</span>/<span class="regexp">/bintray.com/artifact</span><span class="regexp">/download/ginuerzh</span><span class="regexp">/gost/gost</span>_1.<span class="number">2_</span>linux_amd64.tar.gz</span><br><span class="line"><span class="variable">$ </span>tar zxf gost_1.<span class="number">2_</span>linux_amd64.tar.gz</span><br><span class="line"><span class="variable">$ </span>cd gost_1.<span class="number">2_</span>linux_amd64/</span><br><span class="line"><span class="variable">$ </span>./gost -ws /<span class="regexp">/no output</span></span><br></pre></td></tr></table></figure>
<h3 id="client">client</h3><blockquote>
<p>wget <a href="https://bintray.com/ginuerzh/gost/gost/" target="_blank" rel="external">https://bintray.com/ginuerzh/gost/gost/</a></p>
</blockquote>
<h4 id="c9">c9</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gost -L :<span class="number">8899</span> -S demo-project-gostwebsocket<span class="class">.c9</span><span class="class">.io</span> -ws</span><br></pre></td></tr></table></figure>
<!-- 
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./gost -L :<span class="number">8899</span> -S ytlvy-ytlvy<span class="class">.c9</span><span class="class">.io</span> -ws</span><br><span class="line">./gost -L :<span class="number">8899</span> -S demo-project-ytlvy<span class="class">.c9</span><span class="class">.io</span> -ws  <span class="comment">//now</span></span><br></pre></td></tr></table></figure>
<p>—&gt;</p>
<h4 id="Koding">Koding</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">52<span class="class">.74</span><span class="class">.10</span><span class="class">.210</span><span class="pseudo">:8080</span></span><br></pre></td></tr></table></figure>
<h4 id="nitrousbox">nitrousbox</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gost -L :<span class="number">8899</span> -S appName-appid<span class="class">.apne1</span><span class="class">.nitrousbox</span><span class="class">.com</span>:<span class="number">8080</span> -<span class="tag">p</span> <span class="string">'password'</span> -m `encrypt type` -ws</span><br></pre></td></tr></table></figure>
<!-- 
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./gost -L :<span class="number">8899</span> -S ytlvy-<span class="number">228959</span><span class="class">.apne1</span><span class="class">.nitrousbox</span><span class="class">.com</span>:<span class="number">8080</span> -ws</span><br><span class="line">./gost -L :<span class="number">8899</span> -S ytlvy-<span class="number">228959</span><span class="class">.apne1</span><span class="class">.nitrousbox</span><span class="class">.com</span>:<span class="number">8080</span> -m=rc4-md5 -p=<span class="number">123456</span> -ws</span><br></pre></td></tr></table></figure>
<p>—&gt;</p>
<h3 id="behind_proxy">behind proxy</h3><p>如果处在http代理环境中(代理要支持websocket)，可增加上层代理(-P参数)：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gost -L :<span class="number">8899</span> -S demo-project-gostwebsocket<span class="class">.c9</span><span class="class">.io</span> -P your_proxy_ip:port -ws</span><br></pre></td></tr></table></figure></p>
<h3 id="安全处理">安全处理</h3><blockquote>
<p>更改gost文件名，防止自动重启</p>
</blockquote>
<h3 id="Android设置">Android设置</h3><blockquote>
<p>gost支持作为shadowsocks服务器运行(-ss参数)，这样就可以让android手机通过shadowsocks(影梭)使用代理了。</p>
</blockquote>
<h4 id="相关参数：">相关参数：</h4><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">ss    开启shadowsocks模式</span><br><span class="line"></span>-<span class="ruby">sm   设置shadowsocks加密方式(默认为rc4-md5)</span><br><span class="line"></span>-<span class="ruby">sp    设置shadowsocks加密密码(默认为ginuerzh<span class="variable">@gmail</span>.com)</span></span><br></pre></td></tr></table></figure>
<p>当无-ss参数时，-sm, -sp参数无效。<br>以上三个参数对服务端无效。</p>
<h4 id="相关命令：">相关命令：</h4><h5 id="服务端：">服务端：</h5><blockquote>
<p>无需特殊设置<br>shadowsocks模式只与客户端有关，与服务端无关。</p>
</blockquote>
<h5 id="客户端：">客户端：</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gost -L :<span class="number">8899</span> -S demo-project-gostwebsocket<span class="class">.c9</span><span class="class">.io</span> -ws -sm=rc4-md5 -sp=ginuerzh@gmail<span class="class">.com</span> -ss</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在手机的shadowsocks软件中设置好服务器(运行gost电脑的IP)，端口(8899)，加密方法和密码就可以使用了。<br>注：shadowsocks模式与正常模式是不兼容的，当作为shadowsocks模式使用时(有-ss参数)，浏览器不能使用</p>
</blockquote>
<h3 id="encryt_type">encryt type</h3><blockquote>
<p>websocket加密功能需要客户端和服务端gost版本都为1.2版及以上</p>
</blockquote>
<h4 id="目前支持的加密方法">目前支持的加密方法</h4><blockquote>
<p>tls, aes-128-cfb, aes-192-cfb, aes-256-cfb, des-cfb, bf-cfb, cast5-cfb, rc4-md5, rc4, table</p>
</blockquote>
<h4 id="Client端设置">Client端设置</h4><ol>
<li>Client端通过-m参数设置加密方式，默认为不加密(-m参数为空)。</li>
<li>如果设置的加密方式不被支持，则默认为不加密。</li>
<li>当设置的加密方式为tls时，-p参数无效。</li>
<li>当设置的加密方式为非tls时，通过-p参数设置加密密码，且不能为空，默认密码为ginuerzh@gmail.com；-p参数必须与Server端的-p参数相同。</li>
</ol>
<h4 id="Server端设置">Server端设置</h4><ol>
<li>Server端通过-m参数设置加密方式，默认为不加密(-m参数为空)。</li>
<li>如果设置的加密方式不被支持，默认为不处理 (此情形被视为错误，须用户自行改正)。</li>
<li>如果没有设置加密方式(-m参数为空)，则由client端控制加密方式，即client端可通过-m参数指定Server端使用哪种加密方式。</li>
<li>如果设置了加密方式(-m参数不为空)，client端必须使用与Server端相同的加密方式。</li>
<li>当设置的加密方式为tls时，-p参数无效；-key参数可手动指定公钥文件，-cert参数可手动指定私钥文件，如果未指定，则使用默认的公钥与私钥。</li>
<li>当设置的加密方式为非tls时，-key，-cert参数无效；通过-p参数设置加密密码，且不能为空，默认密码为ginuerzh@gmail.com</li>
</ol>
-->]]></content>
    <summary type="html">
    <![CDATA[<h3 id="bbs">bbs</h3><blockquote>
<p><a href="https://groups.google.com/forum/#!forum/go-gost">https://groups.google.com/forum/#!forum/go-gost</a></p>
</blockquote>
<h3 id="原理">原理</h3><blockquote>
<p>在平台中建立websocket服务器，将数据通过websocket传输给客户端实现一个tunnel</p>
</blockquote>
<h3 id="cloud_Ide">cloud Ide</h3><ul>
<li>Cloud 9：<a href="https://c9.io">https://c9.io</a></li>
<li>Koding：<a href="https://koding.com/">https://koding.com/</a></li>
<li>Nitrous：<a href="https://lite.nitrous.io/">https://lite.nitrous.io/</a></li>
</ul>]]>
    
    </summary>
    
      <category term="FQ" scheme="http://ytlvy.com/categories/FQ/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ios send SMS]]></title>
    <link href="http://ytlvy.com/2015/05/30/ios-send-sms/"/>
    <id>http://ytlvy.com/2015/05/30/ios-send-sms/</id>
    <published>2015-05-30T14:27:02.000Z</published>
    <updated>2015-06-05T07:18:29.000Z</updated>
    <content type="html"><![CDATA[<figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;termios.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;sys/ioctl.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NSString</span>(<span class="title">UCS2Encoding</span>)</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span>*)ucs2EncodingString&#123;</span><br><span class="line">    <span class="built_in">NSMutableString</span> *result = [<span class="built_in">NSMutableString</span> string];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; [<span class="keyword">self</span> length]; i++) &#123;</span><br><span class="line">        <span class="keyword">unichar</span> unic = [<span class="keyword">self</span> characterAtIndex:i];</span><br><span class="line">        [result appendFormat:<span class="string">@"%04hX"</span>,unic];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithString:result];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">- (<span class="built_in">NSString</span>*)ucs2DecodingString&#123;</span><br><span class="line">    <span class="built_in">NSUInteger</span> length = [<span class="keyword">self</span> length]/<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">unichar</span> *buf = malloc(<span class="keyword">sizeof</span>(<span class="keyword">unichar</span>)*length);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *scanString = [<span class="keyword">self</span> UTF8String];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        sscanf(scanString+i*<span class="number">4</span>, <span class="string">"%04hX"</span>, buf+i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [[<span class="built_in">NSString</span> alloc] initWithCharacters:buf length:length];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span>*)hexSwipString&#123;</span><br><span class="line">    <span class="keyword">unichar</span> *oldBuf = malloc([<span class="keyword">self</span> length]*<span class="keyword">sizeof</span>(<span class="keyword">unichar</span>));</span><br><span class="line">    <span class="keyword">unichar</span> *newBuf = malloc([<span class="keyword">self</span> length]*<span class="keyword">sizeof</span>(<span class="keyword">unichar</span>));</span><br><span class="line">    [<span class="keyword">self</span> getCharacters:oldBuf range:<span class="built_in">NSMakeRange</span>(<span class="number">0</span>, [<span class="keyword">self</span> length])];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; [<span class="keyword">self</span> length]; i+=<span class="number">2</span>) &#123;</span><br><span class="line">        newBuf[i] = oldBuf[i+<span class="number">1</span>];</span><br><span class="line">        newBuf[i+<span class="number">1</span>] = oldBuf[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">NSString</span> *result = [<span class="built_in">NSString</span> stringWithCharacters:newBuf length:[<span class="keyword">self</span> length]];</span><br><span class="line">    free(oldBuf);</span><br><span class="line">    free(newBuf);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">NSString</span> *<span class="type">PDUEncodeSendingSMS</span>(<span class="type">NSString</span> *phone, <span class="type">NSString</span> *text)&#123;</span><br><span class="line">    <span class="type">NSMutableString</span> *<span class="type">string</span> = [<span class="type">NSMutableString</span> stringWithString:@<span class="string">"001100"</span>];</span><br><span class="line">    [<span class="type">string</span> appendFormat:@<span class="string">"%02X"</span>, (<span class="type">int</span>)[phone length]];</span><br><span class="line">    <span class="keyword">if</span> ([phone length]%<span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">        phone = [phone stringByAppendingString:@<span class="string">"F"</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="type">string</span> appendFormat:@<span class="string">"81%@"</span>,[phone hexSwipString]];</span><br><span class="line">    [<span class="type">string</span> appendString:@<span class="string">"0008AA"</span>];</span><br><span class="line">    <span class="type">NSString</span> *ucs2Text = [text ucs2EncodingString];</span><br><span class="line">    [<span class="type">string</span> appendFormat:@<span class="string">"%02x%@"</span>, (<span class="type">int</span>)[ucs2Text length]/<span class="number">2</span>, ucs2Text];</span><br><span class="line">    <span class="keyword">return</span> [<span class="type">NSString</span> stringWithString:<span class="type">string</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">NSString</span> *sendATCommand(<span class="type">NSFileHandle</span> *baseband, <span class="type">NSString</span> *atCommand)&#123;</span><br><span class="line">    <span class="type">NSLog</span>(@<span class="string">"SEND AT: %@"</span>, atCommand);</span><br><span class="line">    [baseband writeData:[atCommand dataUsingEncoding:<span class="type">NSASCIIStringEncoding</span>]];</span><br><span class="line">    <span class="type">NSMutableString</span> *<span class="literal">result</span> = [<span class="type">NSMutableString</span> <span class="type">string</span>];</span><br><span class="line">    <span class="type">NSData</span> *resultData = [baseband availableData];</span><br><span class="line">    <span class="keyword">while</span> ([resultData length]) &#123;</span><br><span class="line">        [<span class="literal">result</span> appendString:[[<span class="type">NSString</span> alloc] initWithData:resultData encoding:<span class="type">NSASCIIStringEncoding</span>]];</span><br><span class="line">        <span class="keyword">if</span> ([<span class="literal">result</span> hasSuffix:@<span class="string">"OK\r\n"</span>]||[<span class="literal">result</span> hasSuffix:@<span class="string">"ERROR\r\n"</span>]||[<span class="literal">result</span> rangeOfString:@<span class="string">"&gt;"</span>].location != <span class="type">NSNotFound</span>) &#123;</span><br><span class="line">            <span class="type">NSLog</span>(@<span class="string">"RESULT: %@"</span>, <span class="literal">result</span>);</span><br><span class="line">            <span class="keyword">return</span> [<span class="type">NSString</span> stringWithString:<span class="literal">result</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            resultData = [baseband availableData];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">nil</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">BOOL</span> addNewSIMContact(<span class="type">NSFileHandle</span> *baseband, <span class="type">NSString</span> *name, <span class="type">NSString</span> *phone)&#123;</span><br><span class="line">    <span class="type">NSString</span> *<span class="literal">result</span> = sendATCommand(baseband, [<span class="type">NSString</span> stringWithFormat:@<span class="string">"AT+CPBW=,\"%@\",,\"%@\"\r"</span>, phone, [name ucs2EncodingString]]);</span><br><span class="line">    <span class="keyword">if</span> ([<span class="literal">result</span> hasSuffix:@<span class="string">"OK\r\n"</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">BOOL</span> sendSMSWithPDUMode(<span class="type">NSFileHandle</span> *baseband, <span class="type">NSString</span> *phone, <span class="type">NSString</span> *text)&#123;</span><br><span class="line">    <span class="type">NSString</span> *pduString = <span class="type">PDUEncodeSendingSMS</span>(phone, text);</span><br><span class="line">    <span class="type">NSString</span> *<span class="literal">result</span> = sendATCommand(baseband, [<span class="type">NSString</span> stringWithFormat:@<span class="string">"AT+CMGS=%d\r"</span>, (<span class="type">int</span>)[pduString length]/<span class="number">2</span>-<span class="number">1</span>]);</span><br><span class="line">    <span class="literal">result</span> = sendATCommand(baseband, [<span class="type">NSString</span> stringWithFormat:@<span class="string">"%@\x1A"</span>, pduString]);</span><br><span class="line">    <span class="keyword">if</span> ([<span class="literal">result</span> hasSuffix:@<span class="string">"OK\r\n"</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">NSArray</span> *readAllSIMContacts(<span class="type">NSFileHandle</span> *baseband)&#123;</span><br><span class="line">    <span class="type">NSString</span> *<span class="literal">result</span> = sendATCommand(baseband, @<span class="string">"AT+CPBR=?\r"</span>);</span><br><span class="line">    <span class="keyword">if</span> (![<span class="literal">result</span> hasSuffix:@<span class="string">"OK\r\n"</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> max = <span class="number">0</span>;</span><br><span class="line">    sscanf([<span class="literal">result</span> <span class="type">UTF8String</span>], <span class="string">"%*[^+]+CPBR: (%*d-%d)"</span>, &amp;max);</span><br><span class="line">    <span class="literal">result</span> = sendATCommand(baseband, [<span class="type">NSString</span> stringWithFormat:@<span class="string">"AT+CPBR=1,%d\r"</span>,max]);</span><br><span class="line">    <span class="type">NSMutableArray</span> *records = [<span class="type">NSMutableArray</span> <span class="type">array</span>];</span><br><span class="line">    <span class="type">NSScanner</span> *scanner = [<span class="type">NSScanner</span> scannerWithString:<span class="literal">result</span>];</span><br><span class="line">    [scanner scanUpToString:@<span class="string">"+CPBR:"</span> intoString:<span class="type">NULL</span>];</span><br><span class="line">    <span class="keyword">while</span> ([scanner scanString:@<span class="string">"+CPBR:"</span> intoString:<span class="type">NULL</span>]) &#123;</span><br><span class="line">        <span class="type">NSString</span> *phone = <span class="keyword">nil</span>;</span><br><span class="line">        <span class="type">NSString</span> *name = <span class="keyword">nil</span>;</span><br><span class="line">        [scanner scanInt:<span class="type">NULL</span>];</span><br><span class="line">        [scanner scanString:@<span class="string">",\""</span> intoString:<span class="type">NULL</span>];</span><br><span class="line">        [scanner scanUpToString:@<span class="string">"\""</span> intoString:&amp;phone];</span><br><span class="line">        [scanner scanString:@<span class="string">"\","</span> intoString:<span class="type">NULL</span>];</span><br><span class="line">        [scanner scanInt:<span class="type">NULL</span>];</span><br><span class="line">        [scanner scanString:@<span class="string">",\""</span> intoString:<span class="type">NULL</span>];</span><br><span class="line">        [scanner scanUpToString:@<span class="string">"\""</span> intoString:&amp;name];</span><br><span class="line">        [scanner scanUpToString:@<span class="string">"+CPBR:"</span> intoString:<span class="type">NULL</span>];</span><br><span class="line">        <span class="keyword">if</span> ([phone length] &gt; <span class="number">0</span> &amp;&amp; [name length] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            [records addObject:@&#123;@<span class="string">"name"</span>:[name ucs2DecodingString], @<span class="string">"phone"</span>:phone&#125;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="type">NSArray</span> arrayWithArray:records];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> main(<span class="type">int</span> argc, <span class="keyword">const</span> <span class="type">char</span> * argv[])</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    @autoreleasepool &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">NSFileHandle</span> *baseband = [<span class="type">NSFileHandle</span> fileHandleForUpdatingAtPath:@<span class="string">"/dev/dlci.spi-baseband.extra_0"</span>];</span><br><span class="line">        <span class="keyword">if</span> (baseband == <span class="keyword">nil</span>) &#123;</span><br><span class="line">            <span class="type">NSLog</span>(@<span class="string">"Can't open baseband."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> fd = [baseband fileDescriptor];</span><br><span class="line">        </span><br><span class="line">        ioctl(fd, <span class="type">TIOCEXCL</span>);</span><br><span class="line">        fcntl(fd, <span class="type">F_SETFL</span>, <span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">static</span> struct termios term;</span><br><span class="line">        </span><br><span class="line">        tcgetattr(fd, &amp;term);</span><br><span class="line">        </span><br><span class="line">        cfmakeraw(&amp;term);</span><br><span class="line">        cfsetspeed(&amp;term, <span class="number">115200</span>);</span><br><span class="line">        term.c_cflag = <span class="type">CS8</span> | <span class="type">CLOCAL</span> | <span class="type">CREAD</span>;</span><br><span class="line">        term.c_iflag = <span class="number">0</span>;</span><br><span class="line">        term.c_oflag = <span class="number">0</span>;</span><br><span class="line">        term.c_lflag = <span class="number">0</span>;</span><br><span class="line">        term.c_cc[<span class="type">VMIN</span>] = <span class="number">0</span>;</span><br><span class="line">        term.c_cc[<span class="type">VTIME</span>] = <span class="number">0</span>;</span><br><span class="line">        tcsetattr(fd, <span class="type">TCSANOW</span>, &amp;term);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="type">NSString</span> *<span class="literal">result</span> = sendATCommand(baseband, @<span class="string">"AT+CSCS=\"UCS2\"\r"</span>);</span><br><span class="line">        <span class="literal">result</span> = sendATCommand(baseband, @<span class="string">"ATE0\r"</span>);</span><br><span class="line">        <span class="literal">result</span> = sendATCommand(baseband, @<span class="string">"AT+CMGF=0\r"</span>);</span><br><span class="line"> </span><br><span class="line">        </span><br><span class="line">        sendSMSWithPDUMode(baseband, @<span class="string">"10010"</span>, @<span class="string">"测试"</span>);</span><br><span class="line">        </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;termios.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;sys/ioctl.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NSString</span>(<span class="title">UCS2Encoding</span>)</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span>*)ucs2EncodingString&#123;</span><br><span class="line">    <span class="built_in">NSMutableString</span> *result = [<span class="built_in">NSMutableString</span> string];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; [<span class="keyword">self</span> length]; i++) &#123;</span><br><span class="line">        <span class="keyword">unichar</span> unic = [<span class="keyword">self</span> characterAtIndex:i];</span><br><span class="line">        [result appendFormat:<span class="string">@"%04hX"</span>,unic];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithString:result];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">- (<span class="built_in">NSString</span>*)ucs2DecodingString&#123;</span><br><span class="line">    <span class="built_in">NSUInteger</span> length = [<span class="keyword">self</span> length]/<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">unichar</span> *buf = malloc(<span class="keyword">sizeof</span>(<span class="keyword">unichar</span>)*length);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *scanString = [<span class="keyword">self</span> UTF8String];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        sscanf(scanString+i*<span class="number">4</span>, <span class="string">"%04hX"</span>, buf+i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [[<span class="built_in">NSString</span> alloc] initWithCharacters:buf length:length];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span>*)hexSwipString&#123;</span><br><span class="line">    <span class="keyword">unichar</span> *oldBuf = malloc([<span class="keyword">self</span> length]*<span class="keyword">sizeof</span>(<span class="keyword">unichar</span>));</span><br><span class="line">    <span class="keyword">unichar</span> *newBuf = malloc([<span class="keyword">self</span> length]*<span class="keyword">sizeof</span>(<span class="keyword">unichar</span>));</span><br><span class="line">    [<span class="keyword">self</span> getCharacters:oldBuf range:<span class="built_in">NSMakeRange</span>(<span class="number">0</span>, [<span class="keyword">self</span> length])];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; [<span class="keyword">self</span> length]; i+=<span class="number">2</span>) &#123;</span><br><span class="line">        newBuf[i] = oldBuf[i+<span class="number">1</span>];</span><br><span class="line">        newBuf[i+<span class="number">1</span>] = oldBuf[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">NSString</span> *result = [<span class="built_in">NSString</span> stringWithCharacters:newBuf length:[<span class="keyword">self</span> length]];</span><br><span class="line">    free(oldBuf);</span><br><span class="line">    free(newBuf);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ios reverse myapp]]></title>
    <link href="http://ytlvy.com/2015/05/30/ios-reverse-myapp/"/>
    <id>http://ytlvy.com/2015/05/30/ios-reverse-myapp/</id>
    <published>2015-05-30T14:26:50.000Z</published>
    <updated>2015-06-05T07:33:03.000Z</updated>
    <content type="html"><![CDATA[<h2 id="reverseMyApp">reverseMyApp</h2><h3 id="download_tools_and_install">download tools and install</h3><p><a href="https://code.google.com/p/networkpx/wiki/class_dump_z" target="_blank" rel="external">class-dump-z</a><br><a href="http://www.charlesproxy.com/download/" target="_blank" rel="external">Charles</a></p>
<h3 id="Edit_Scheme">Edit Scheme</h3><p>Select <code>Run</code> panel, then in <code>info</code> tab, select <code>Release</code> under <code>Build Configuration</code>;</p>
<h3 id="enter_Simulator_App_directory">enter Simulator App directory</h3><p>you can use <code>SimPholders2</code></p>
<a id="more"></a>
<h3 id="dump_classes">dump classes</h3><ol>
<li>check out what Frameworks the bundle links to<br> <code>otool -L app</code></li>
<li>class dump<br> <code>class-dump-z app &gt; app.txt</code></li>
<li>find “manager, “shared” or “store”</li>
</ol>
<h3 id="print_plist">print plist</h3><pre><code>plutil -<span class="tag">p</span> Info.plist
</code></pre><h3 id="NSUserDefaults_directory">NSUserDefaults directory</h3><pre><code><span class="list">{App Directory}</span>/Library/Preferences/<span class="list">{Bundle Identifier}</span>.plist
open Library/Preferences/<span class="list">{Bundle Identifier}</span>.plist
</code></pre><h3 id="open_finder_in_current_directory">open finder in current directory</h3><pre><code>open .
</code></pre><h3 id="Keychain_Access">Keychain Access</h3><pre><code>Keychain  is encrypted with the <span class="operator"><span class="keyword">help</span> <span class="keyword">of</span> the <span class="keyword">user</span>’s <span class="keyword">password</span>, which generally <span class="keyword">is</span> the simple <span class="number">4</span>-digit <span class="built_in">numeric</span> passcode.

<span class="number">1.</span> <span class="keyword">Encrypt</span> the <span class="keyword">data</span>
    encrypting the <span class="keyword">data</span> <span class="keyword">using</span> Apple’s Common Crypto APIs <span class="keyword">found</span> <span class="keyword">in</span> the Security Framework
<span class="number">2.</span> <span class="keyword">Do</span> <span class="keyword">NOT</span> hardcode your encryption <span class="keyword">key</span> <span class="keyword">to</span> the app
    You need <span class="keyword">to</span> make a <span class="keyword">unique</span> encryption <span class="keyword">key</span> <span class="keyword">for</span> the device
<span class="number">3.</span> Be aware <span class="keyword">of</span> your methods <span class="keyword">and</span> how an attacker can <span class="keyword">use</span> them
<span class="number">4.</span> Question yourself: <span class="keyword">Do</span> you need <span class="keyword">to</span> store it?</span>
</code></pre><h2 id="Network_Penetration_Testing_and_Mapping">Network Penetration Testing and Mapping</h2><h3 id="strings">strings</h3><pre><code>strings app <span class="string">| grep http</span>
</code></pre><p><a href="http://version1.api.memegenerator.net/Generator_Select_ByUrlNameOrGeneratorID" target="_blank" rel="external">http://version1.api.memegenerator.net/Generator_Select_ByUrlNameOrGeneratorID</a></p>
<h2 id="LLDB">LLDB</h2><pre><code>gdb -q  
<span class="list">(<span class="keyword">lldb</span>)</span> process attach --name <span class="string">"Meme Collector"</span> --waitfor

//make breakpoints
<span class="list">(<span class="keyword">lldb</span>)</span>b viewDidLoad

//show breakpoints address
<span class="list">(<span class="keyword">lldb</span>)</span>br l

//continue
<span class="list">(<span class="keyword">lldb</span>)</span>c
</code></pre><p><img src="http://cdn5.raywenderlich.com/wp-content/uploads/2013/07/Terminal-GDB.png" alt=""></p>
<pre><code>call <span class="comment">[<span class="comment">[MoneyManager sharedManager]</span> purchaseCurrency]</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="reverseMyApp">reverseMyApp</h2><h3 id="download_tools_and_install">download tools and install</h3><p><a href="https://code.google.com/p/networkpx/wiki/class_dump_z">class-dump-z</a><br><a href="http://www.charlesproxy.com/download/">Charles</a></p>
<h3 id="Edit_Scheme">Edit Scheme</h3><p>Select <code>Run</code> panel, then in <code>info</code> tab, select <code>Release</code> under <code>Build Configuration</code>;</p>
<h3 id="enter_Simulator_App_directory">enter Simulator App directory</h3><p>you can use <code>SimPholders2</code></p>]]>
    
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
      <category term="reverse" scheme="http://ytlvy.com/categories/IOS/reverse/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ios reverse tutorial]]></title>
    <link href="http://ytlvy.com/2015/05/30/ios-reverse-tutorial/"/>
    <id>http://ytlvy.com/2015/05/30/ios-reverse-tutorial/</id>
    <published>2015-05-30T14:26:41.000Z</published>
    <updated>2015-06-05T07:14:44.000Z</updated>
    <content type="html"><![CDATA[<h2 id="setting_platform">setting platform</h2><h3 id="jailbreak">jailbreak</h3><h3 id="add_sources">add sources</h3><pre><code><span class="number">1</span>. apt.<span class="number">178</span><span class="class">.com</span>
<span class="number">2</span>. apt<span class="class">.weiphone</span><span class="class">.com</span>
</code></pre><h3 id="install_tools">install tools</h3><pre><code><span class="label">openssh</span>
<span class="keyword">BigBoss </span>Recommended tools
<span class="label">MobileTerminal</span>
</code></pre><h3 id="ssh_login">ssh login</h3><pre><code><span class="keyword">user</span>: <span class="literal">root</span> pwd:alpine
change <span class="literal">password</span> <span class="constant">G</span>JJ123456
</code></pre><h3 id="update">update</h3><pre><code>apt-<span class="built_in">get</span> <span class="keyword">update</span>
apt-<span class="built_in">get</span> upgrade
</code></pre><a id="more"></a>
<h2 id="get_class_information">get class information</h2><h3 id="Dumping_class_information">Dumping class information</h3><blockquote>
<p>user app diretory<br>/private/var/mobile/Containers/Bundle/Application/</p>
</blockquote>
<pre><code>scp <span class="class"><span class="keyword">class</span>-<span class="title">dump</span>-<span class="title">z</span> <span class="title">root</span>@192.168.1.101:<span class="typename">/var/root</span></span>
cp <span class="class"><span class="keyword">class</span>-<span class="title">dump</span>-<span class="title">z</span> /<span class="title">usr</span>/<span class="title">bin</span></span>
chmod <span class="number">755</span> /usr/bin/<span class="class"><span class="keyword">class</span>-<span class="title">dump</span>-<span class="title">z</span></span>

Clutch -i
Clutch -d com.tencent.mipadqq
cd /<span class="keyword">private</span>/<span class="variable"><span class="keyword">var</span>/mobile/Documents/Dumped</span>
</code></pre><h3 id="Keychain-Dumper">Keychain-Dumper</h3><pre><code><span class="comment">//赋予Keychain数据库可读权限</span>
cd /private/var/Keychains/ 
chmod +r keychain-<span class="number">2</span><span class="class">.db</span>
keychain_dumper &gt; keychain-export<span class="class">.txt</span> 
</code></pre><h2 id="Cycript">Cycript</h2><h3 id=""> </h3><ol>
<li>The Text Section: This section is largely for read-only data,For example,<br> it includes the source code section, the C-type strings section, the constants, etc</li>
<li>The Data Section: This section is largely for writable data from the program.<br> This includes the bss section for static variables, the common section for global variables, etc<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//<span class="built_in">print</span> out Meme Collector’s Mach-O header</span><br><span class="line">otool -h Meme\ Collector</span><br><span class="line"></span><br><span class="line">otool <span class="operator">-l</span> Meme\ Collector</span><br><span class="line">//find sectname __classname section |  __objc_classname</span><br><span class="line"></span><br><span class="line">//displays the global offset of <span class="built_in">where</span> the strings are <span class="keyword">in</span> the binary</span><br><span class="line">strings -o Meme\ Collector</span><br><span class="line"></span><br><span class="line">//The nm <span class="built_in">command</span> displays information regarding the symbol table</span><br><span class="line">nm Meme\ Collector | grep aSecretFunction</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="http://cdn5.raywenderlich.com/wp-content/uploads/2013/07/Terminal-Binary-Sections-700x437.png" alt=""></p>
<h3 id="App_Extension_脱壳">App Extension 脱壳</h3><blockquote>
<ol>
<li>从app store下载的app和app extension是加过密的</li>
<li>iPhone applications的解密办法: dumpdecrypted, app脱壳开源工具.原理是：将应用程序运行起来（iOS系统会先解密程序再启动）<br>，然后将内存中的解密结果dump写入文件中，得到一个新的可执行程序</li>
<li>iPhone app extensions的特别之处, dumpdecrypted 无法实现对iPhone app extensions的脱壳<blockquote>
<p>app extension虽是独立进程，但不可独立运行<br>app extension的进程中，写权限被严格控制</p>
</blockquote>
</li>
<li>修改版dumpdecrypted：<blockquote>
<ol>
<li>本地编译好 dumpdecrypted.dylib</li>
<li>指定作用的Extension Bundle</li>
<li>将 dumpdecrypted.plist 和 dumpdecrypted.dylib 拷贝至越狱机的<br>/Library/MobileSubstrate/DynamicLibraries/ 下</li>
<li>利用系统相册启动微信的Share Extension</li>
</ol>
</blockquote>
</li>
</ol>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//查看加密</span><br><span class="line">otool <span class="operator">-l</span> binary_name | grep crypt</span><br><span class="line"></span><br><span class="line">// 修改版dumpdecrypted</span><br><span class="line">vim dumpdecrypted.plist</span><br><span class="line">&#123;</span><br><span class="line">    Filter = &#123;</span><br><span class="line">        Bundles = (<span class="string">"com.tencent.xin.sharetimeline"</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//当微信的Share Extension被启动时，解密插件自动工作。值得注意的是，</span><br><span class="line">//如果你的越狱机是armv7架构，那么也就只dump armv7那部分；如果越狱机是arm64架构，</span><br><span class="line">//那么也就只dump arm64那部分。得到干净的dump结果执行下面</span><br><span class="line">$ lipo -thin armv7 xxx.decrypted -output xxx_armv7.decrypted //或者</span><br><span class="line">$ lipo -thin armv64 xxx.decrypted -output xxx_arm64.decrypted</span><br></pre></td></tr></table></figure>
<h3 id="iOS应用逆向常用工具">iOS应用逆向常用工具</h3><pre><code>-<span class="ruby"> <span class="constant">Reveal</span>
</span>-<span class="ruby"> <span class="constant">Cycript</span>
</span>-<span class="ruby"> <span class="constant">Class</span>-dump
</span>-<span class="ruby"> <span class="constant">Keychain</span>-<span class="constant">Dumper</span>
</span>-<span class="ruby"> gdb
</span>-<span class="ruby"> iNalyzer
</span>-<span class="ruby"> introspy
</span>-<span class="ruby"> <span class="constant">Fishhook</span>
</span>-<span class="ruby"> removePIE
</span>-<span class="ruby"> <span class="constant">IDA</span> pro <span class="keyword">or</span> <span class="constant">Hopper</span>
</span>-<span class="ruby"> snoop-it
</span>-<span class="ruby"> iDB
</span>-<span class="ruby"> <span class="constant">Charles</span>
</span>-<span class="ruby"> <span class="constant">SSL</span> <span class="constant">Kill</span> <span class="constant">Switch</span></span>
</code></pre><h4 id="常用的命令和工具">常用的命令和工具</h4><pre><code>-<span class="ruby"> ps           ——显示进程状态，<span class="constant">CPU</span>使用率，内存使用情况等
</span>-<span class="ruby"> sysctl       ——检查设定<span class="constant">Kernel</span>配置
</span>-<span class="ruby"> netstat     ——显示网络连接，路由表，接口状态等
</span>-<span class="ruby"> route        ——路由修改
</span>-<span class="ruby"> renice       ——调整程序运行的优先级
</span>-<span class="ruby"> ifconfig    ——查看网络配置
</span>-<span class="ruby"> tcpdump   ——截获分析网络数据包
</span>-<span class="ruby"> lsof           ——列出当前系统打开的文件列表，别忘记一切皆文件，包括网络连接、硬件等
</span>-<span class="ruby"> otool ①     ——查看程序依赖哪些动态库信息，反编代码段……等等等等
</span>-<span class="ruby"> nm ②        ——显示符号表
</span>-<span class="ruby"> ldid ③      ——签名工具
</span>-<span class="ruby"> gdb          ——调试工具
</span>-<span class="ruby"> patch       ——补丁工具
</span>-<span class="ruby"> <span class="constant">SSH</span>         ——远程控制</span>
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//可查看可执行程序都链接了那些库</span><br><span class="line">otool  -L WQAlbum </span><br><span class="line">//可以反编译WQAlbum的__TEXT__段内容, 截前<span class="number">10</span>行：</span><br><span class="line">otool -tV WQAlbum |head -n <span class="number">10</span></span><br><span class="line"></span><br><span class="line">//nm，显示程序符号表，用我自己的应用程序私人相册现身说法一下</span><br><span class="line">nm -g WQAlbum  （ -g 代表 global） </span><br><span class="line"></span><br><span class="line">//ldid，是iPhoneOS.platform提供的签名工具，我们自己编译的程序需要签上名才能跑在iPhone/iPad上，使用方法</span><br><span class="line"><span class="built_in">export</span> CODESIGN_ALLOCATE=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/codesign_allocate</span><br><span class="line">ldid -S helloworld</span><br></pre></td></tr></table></figure>
<h3 id="裸奔app的安全隐患">裸奔app的安全隐患</h3><pre><code>-<span class="ruby"> 任意读写文件系统数据
</span>-<span class="ruby"> <span class="constant">HTTP</span>(<span class="constant">S</span>)实时被监测
</span>-<span class="ruby"> 重新打包ipa
</span>-<span class="ruby"> 暴露的函数符号
</span>-<span class="ruby"> 未加密的静态字符
</span>-<span class="ruby"> 篡改程序逻辑控制流
</span>-<span class="ruby"> 拦截系统框架<span class="constant">API</span>
</span>-<span class="ruby"> 逆向加密逻辑
</span>-<span class="ruby"> 跟踪函数调用过程（objc_msgSend）
</span>-<span class="ruby"> 可见视图的具体实现
</span>-<span class="ruby"> 伪造设备标识
</span>-<span class="ruby"> 可用的<span class="constant">URL</span> schemes
</span>-<span class="ruby"> runtime任意方法调用
</span>-<span class="ruby"> ……</span>
</code></pre><h4 id="cycript">cycript</h4><h5 id="Objective-C_objects_from_addresses">Objective-C objects from addresses</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">var</span> <span class="tag">p</span> = new <span class="function"><span class="title">Instance</span><span class="params">(<span class="number">0</span>x8614390)</span></span></span><br></pre></td></tr></table></figure>
<h5 id="Getting_ivars">Getting ivars</h5><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//*varName</span></span><br><span class="line">cy<span class="preprocessor"># *controller</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tryPrintIvars</span><span class="params">(a)</span></span>&#123; <span class="keyword">var</span> x=&#123;&#125;; <span class="keyword">for</span>(i <span class="keyword">in</span> *a)&#123; <span class="keyword">try</span>&#123; x[i] = (*a)[i]; &#125; <span class="keyword">catch</span>(e)&#123;&#125; &#125; <span class="keyword">return</span> x; &#125;</span><br><span class="line">cy<span class="preprocessor"># tryPrintIvars(a)</span></span><br></pre></td></tr></table></figure>
<h5 id="Getting_methods">Getting methods</h5><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function printMethods(className) &#123;</span><br><span class="line">  <span class="keyword">var</span> count = new new <span class="type">Type</span>(<span class="string">"I"</span>);</span><br><span class="line">  <span class="keyword">var</span> methods = class_copyMethodList(objc_getClass(className), count);</span><br><span class="line">  <span class="keyword">var</span> methodsArray = [];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; *count; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="keyword">method</span> = methods[i];</span><br><span class="line">    methodsArray.push(&#123;selector:method_getName(<span class="keyword">method</span>), implementation:method_getImplementation(<span class="keyword">method</span>)&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  free(methods);</span><br><span class="line">  free(count);</span><br><span class="line">  <span class="keyword">return</span> methodsArray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cy<span class="comment"># printMethods("MailboxPrefsTableCell")</span></span><br></pre></td></tr></table></figure>
<h5 id="Get_methods_matching_particular_RegExp">Get methods matching particular RegExp</h5><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">methodsMatching</span><span class="params">(cls, regexp)</span> &#123;</span> return [[new Selector<span class="params">(m)</span>.type<span class="params">(cls)</span>, m] <span class="keyword">for</span> <span class="params">(m in cls.messages)</span> <span class="keyword">if</span> <span class="params">(!regexp || regexp.test<span class="params">(m)</span>)</span>]; &#125;</span><br><span class="line">cy<span class="built_in">#</span> methodsMatching<span class="params">(NSRunLoop, /forKey:$/)</span></span><br></pre></td></tr></table></figure>
<h5 id="Getting_class_methods">Getting class methods</h5><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="atom">cy</span># <span class="name">NSRunLoop</span>-&gt;<span class="atom">isa</span>.<span class="atom">messages</span>[<span class="string">'currentRunLoop'</span>] = ...</span><br></pre></td></tr></table></figure>
<h5 id="Replacing_existing_Objective-C_methods_func-call(self,_arg1,_arg2,_arg3,_…)">Replacing existing Objective-C methods func.call(self, arg1, arg2, arg3, …)</h5><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cy# original_NSRunLoop_description = NSRunLoop.<span class="keyword">messages</span>[<span class="string">'description'</span>];</span><br><span class="line">cy# NSRunLoop.<span class="keyword">messages</span>[<span class="string">'description'</span>] = <span class="function"><span class="keyword">function</span><span class="params">()</span> &#123; <span class="title">return</span> <span class="title">original_NSRunLoop_description</span>.<span class="title">call</span><span class="params">(this)</span>.<span class="title">toString</span><span class="params">()</span>.<span class="title">substr</span><span class="params">(0, 80)</span>+", <span class="title">etc</span>."; &#125;</span></span><br><span class="line">cy# [NSRunLoop currentRunLoop]</span><br><span class="line"><span class="string">"&lt;CFRunLoop 0x205ee0 [0x381dbff4]&gt;&#123;locked = false, wait port = 0x1303, stopped = , etc."</span></span><br><span class="line"></span><br><span class="line">cy# original_SpringBoard_menuButtonDown = SpringBoard.<span class="keyword">messages</span>[<span class="string">'menuButtonDown:'</span>]</span><br><span class="line">cy# SpringBoard.<span class="keyword">messages</span>[<span class="string">'menuButtonDown:'</span>] = <span class="function"><span class="keyword">function</span><span class="params">(arg1)</span> &#123;<span class="title">original_SpringBoard_menuButtonDown</span>.<span class="title">call</span><span class="params">(this, arg1)</span>;&#125;</span></span><br></pre></td></tr></table></figure>
<h5 id="Load_frameworks">Load frameworks</h5><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadFramework</span><span class="params">(fw)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> h=<span class="string">"/System/Library/"</span>,t=<span class="string">"Frameworks/"</span>+fw+<span class="string">".framework"</span>;</span><br><span class="line">  [[NSBundle bundleWithPath:h+t]||[NSBundle bundleWithPath:h+<span class="string">"Private"</span>+t] load];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="Include_other_Cycript_files">Include other Cycript files</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">localhost:</span>~ mobile$ cycript -p SpringBoard main.cy</span><br><span class="line"><span class="string">localhost:</span>~ mobile$ cycript -p SpringBoard</span><br><span class="line"></span><br><span class="line"><span class="comment">// include other .cy files</span></span><br><span class="line">function include(fn) &#123;</span><br><span class="line">  var t = [<span class="keyword">new</span> NSTask init]; [t <span class="string">setLaunchPath:</span>@<span class="string">"/usr/bin/cycript"</span>]; [t <span class="string">setArguments:</span>[<span class="string">"-c"</span>, fn]];</span><br><span class="line">  var p = [NSPipe pipe]; [t <span class="string">setStandardOutput:</span>p]; [t launch]; [t waitUntilExit]; </span><br><span class="line">  var s = [<span class="keyword">new</span> NSString <span class="string">initWithData:</span>[[p fileHandleForReading] readDataToEndOfFile] <span class="string">encoding:</span><span class="number">4</span>];</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.eval(s.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="Using_NSLog">Using NSLog</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cy# NSLog_ = dlsym(RTLD_DEFAULT, <span class="string">"NSLog"</span>)</span><br><span class="line"><span class="number">0x31451329</span></span><br><span class="line">cy# NSLog = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">var</span> types = <span class="string">'v'</span>, args = [], count = <span class="built_in">arguments</span>.length; <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i != count; ++i) &#123; types += <span class="string">'@'</span>; args.push(<span class="built_in">arguments</span>[i]); &#125; <span class="keyword">new</span> Functor(NSLog_, types).apply(<span class="literal">null</span>, args); &#125;</span><br><span class="line">&#123;&#125;</span><br><span class="line">cy# NSLog(<span class="string">"w ivars: %@"</span>, tryPrintIvars(w))</span><br><span class="line"><span class="comment">//If you are attached to a process, the output is going to be in the syslog:</span></span><br></pre></td></tr></table></figure>
<h5 id="Using_CGGeometry_functions">Using CGGeometry functions</h5><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">function</span> <span class="tag">CGPointMake</span>(x, y) &#123; <span class="tag">return</span> &#123;<span class="attribute">x</span>:x, <span class="attribute">y</span>:y&#125;; &#125;</span><br><span class="line"><span class="tag">function</span> <span class="tag">CGSizeMake</span>(w, h) &#123; <span class="tag">return</span> &#123;<span class="attribute">width</span>:w, <span class="attribute">height</span>:h&#125;; &#125;</span><br><span class="line"><span class="tag">function</span> <span class="tag">CGRectMake</span>(x, y, w, h) &#123; <span class="tag">return</span> &#123;<span class="attribute">origin</span>:<span class="function">CGPointMake</span>(x,y), <span class="attribute">size</span>:<span class="function">CGSizeMake</span>(w, h)&#125;; &#125;</span><br></pre></td></tr></table></figure>
<h5 id="Writing_Cycript_output_to_file">Writing Cycript output to file</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[someObject someFunction] <span class="string">writeToFile:</span><span class="string">"/var/mobile/cycriptoutput.txt"</span> <span class="string">atomically:</span>NO <span class="string">encoding:</span><span class="number">4</span> <span class="string">error:</span>NULL]</span><br></pre></td></tr></table></figure>
<p>You can use this, for example, to get a dump of SpringBoard’s view tree<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">iPhone:</span>~$ cycript -p SpringBoard</span><br><span class="line">cy# [[UIApp-&gt;_uiController.window recursiveDescription] <span class="string">writeToFile:</span><span class="string">"/var/mobile/viewdump.txt"</span> <span class="string">atomically:</span>NO <span class="string">encoding:</span><span class="number">4</span> <span class="string">error:</span>NULL]</span><br></pre></td></tr></table></figure></p>
<h5 id="Printing_view_hierarchy">Printing view hierarchy</h5><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cy<span class="comment"># ?expand</span></span><br><span class="line"><span class="variable">expand =</span>= <span class="constant">true</span></span><br><span class="line">cy<span class="comment"># UIApp.keyWindow.recursiveDescription</span></span><br></pre></td></tr></table></figure>
<h5 id="Cycript_scripts">Cycript scripts</h5><p>Custom shell function that loads a cycript file:<br><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">cyc () </span><span class="expression">&#123; <span class="variable">cycript</span> <span class="variable">-p</span> $1 <span class="end-block">/var</span><span class="end-block">/root</span><span class="end-block">/common.cy </span>&gt; <span class="end-block">/dev</span><span class="end-block">/null</span>; <span class="variable">cycript</span> <span class="variable">-p</span> $1; &#125;</span><span class="xml"></span><br><span class="line">Usage: cyc ProcessName</span></span><br></pre></td></tr></table></figure></p>
<p>Add this to /etc/profile.d/cycript.sh to make it available in all sessions.</p>
<h5 id="Weak_Classdump_(Cycript_based_class-dump)">Weak Classdump (Cycript based class-dump)</h5><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root<span class="comment"># cycript -p Skype weak_classdump.cy; cycript -p Skype</span></span><br><span class="line"> 'Added weak_classdump <span class="keyword">to</span> <span class="string">"Skype"</span> (<span class="number">1685</span>)'</span><br><span class="line"> cy<span class="comment"># UIApp</span></span><br><span class="line"> <span class="string">"&lt;HellcatApplication: 0x1734e0&gt;"</span></span><br><span class="line"> cy<span class="comment"># weak_classdump(HellcatApplication);</span></span><br><span class="line"> <span class="string">"Wrote file to /tmp/HellcatApplication.h"</span></span><br><span class="line"> cy<span class="comment"># UIApp.delegate</span></span><br><span class="line"> <span class="string">"&lt;SkypeAppDelegate: 0x194db0&gt;"</span></span><br><span class="line"> cy<span class="comment"># weak_classdump(SkypeAppDelegate,"/someDirWithWriteAccess/");</span></span><br><span class="line"> <span class="string">"Wrote file to /someDirWithWriteAccess/SkypeAppDelegate.h"</span></span><br><span class="line"> root<span class="comment"># cycript -p iapd weak_classdump.cy; cycript -p iapd</span></span><br><span class="line"> 'Added weak_classdump <span class="keyword">to</span> <span class="string">"iapd"</span> (<span class="number">1127</span>)'</span><br><span class="line"> cy<span class="comment"># weak_classdump(IAPPortManager)</span></span><br><span class="line"> <span class="string">"Wrote file to /tmp/IAPPortManager.h"</span></span><br><span class="line"> root<span class="comment"># cycript -p MobilePhone weak_classdump.cy; cycript -p MobilePhone</span></span><br><span class="line"> 'Added weak_classdump <span class="keyword">to</span> <span class="string">"MobilePhone"</span> (<span class="number">385</span>)'</span><br><span class="line"> <span class="comment">#cy weak_classdump_bundle([NSBundle mainBundle],"/tmp/MobilePhone")</span></span><br><span class="line"> <span class="string">"Dumping bundle... Check syslog. Will play lock sound when done."</span></span><br></pre></td></tr></table></figure>
<h3 id="Yahoo_Weather_app">Yahoo Weather app</h3><h4 id="install">install</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i cycript.deb</span><br></pre></td></tr></table></figure>
<h4 id="use">use</h4><ol>
<li>ps aux | grep “weather”</li>
<li>cycript -p 1710</li>
<li>var app = [UIApplication sharedApplication] &amp;&amp; UIApp(default val)</li>
<li>var appdelegate = app.delegate</li>
<li>UIApp.windows</li>
<li>UIApp.keyWindow.rootViewController</li>
<li>printMethods(YWAppDelegate)  //printMethods see defintion above</li>
<li>[[[[[UIApplication sharedApplication] keyWindow] subviews] objectAtIndex:0] nextResponder].topViewController</li>
<li>printMethods(YWMainViewController)</li>
<li>[[[[[[UIApplication sharedApplication] keyWindow] subviews] objectAtIndex:0] nextResponder].topViewController userDidRequestUpdate]</li>
<li>tryPrintIvars([[[[[UIApplication sharedApplication] keyWindow] subviews] objectAtIndex:0] nextResponder].topViewController)</li>
</ol>
<h3 id="Method_Swizzling_Using_Cycript">Method Swizzling Using Cycript</h3><ol>
<li>cy# Appdelegate-&gt;isa.messages</li>
<li>Appdelegate.messages</li>
<li>ViewController.messages</li>
<li>ViewController.messages[‘validateLogin’] = function(){return true}//Swizzling</li>
<li>[UIApp.keyWindow.rootViewController.visibleViewController pushLoginPage]</li>
</ol>
<h3 id="IOS_fileSystem">IOS fileSystem</h3><ol>
<li>user <code>mobile</code>, <code>ps aux</code></li>
<li>cydia dufault user <code>root</code> password <code>alpine</code></li>
<li>/Applications   ————-   system preinstalled or cydia installed</li>
<li>/private/var/mobile/Applications</li>
<li>/var/mobile/Library/AddressBook</li>
<li>sqlite3 AddressBook.sqlitedb</li>
<li>.tables</li>
<li>select * from ABPserson;</li>
<li>/private/var/wireless/Library/CallHistory</li>
<li>sqlite3 call_history.db</li>
<li>plutil -convert xml1 System/Library/Backup/Domains.plist</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="setting_platform">setting platform</h2><h3 id="jailbreak">jailbreak</h3><h3 id="add_sources">add sources</h3><pre><code><span class="number">1</span>. apt.<span class="number">178</span><span class="class">.com</span>
<span class="number">2</span>. apt<span class="class">.weiphone</span><span class="class">.com</span>
</code></pre><h3 id="install_tools">install tools</h3><pre><code><span class="label">openssh</span>
<span class="keyword">BigBoss </span>Recommended tools
<span class="label">MobileTerminal</span>
</code></pre><h3 id="ssh_login">ssh login</h3><pre><code><span class="keyword">user</span>: <span class="literal">root</span> pwd:alpine
change <span class="literal">password</span> <span class="constant">G</span>JJ123456
</code></pre><h3 id="update">update</h3><pre><code>apt-<span class="built_in">get</span> <span class="keyword">update</span>
apt-<span class="built_in">get</span> upgrade
</code></pre>]]>
    
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
      <category term="reverse" scheme="http://ytlvy.com/categories/IOS/reverse/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ios reverse]]></title>
    <link href="http://ytlvy.com/2015/05/30/ios-reverse/"/>
    <id>http://ytlvy.com/2015/05/30/ios-reverse/</id>
    <published>2015-05-30T14:26:18.000Z</published>
    <updated>2015-06-05T07:15:00.000Z</updated>
    <content type="html"><![CDATA[<h3 id="class-dump-z">class-dump-z</h3><h4 id="下载配置class_dump_z">下载配置class_dump_z</h4><p>前往 <a href="https://code.google.com/p/networkpx/wiki/class_dump_z" target="_blank" rel="external">https://code.google.com/p/networkpx/wiki/class_dump_z</a> ，下载tar包，然后解压配置到本地环境<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>tar -zxvf <span class="class"><span class="keyword">class</span>-<span class="title">dump</span>-<span class="title">z_0</span>.2<span class="title">a</span>.<span class="title">tar</span>.<span class="title">gz</span>  </span></span><br><span class="line"><span class="variable">$ </span>sudo cp mac_x86/<span class="class"><span class="keyword">class</span>-<span class="title">dump</span>-<span class="title">z</span> /<span class="title">usr</span>/<span class="title">bin</span>/</span></span><br></pre></td></tr></table></figure></p>
<h4 id="class_dump_分文件">class_dump 分文件</h4><pre><code><span class="keyword">class</span>-dump-z <span class="keyword">App</span> -<span class="keyword">H</span> -o outputdir
</code></pre><h4 id="class_dump支付宝app">class_dump支付宝app</h4><pre><code>$ class-dump-z Portal &gt; Portal-dump.txt  

@protocol XXEncryptedProtocol_10764b0  
-<span class="ruby">(?)<span class="constant">XXEncryptedMethod_d109df</span>;  
</span>-<span class="ruby">(?)<span class="constant">XXEncryptedMethod_d109d3</span>;  
</span>-<span class="ruby">(?)<span class="constant">XXEncryptedMethod_d109c7</span>;  
</span>-<span class="ruby">(?)<span class="constant">XXEncryptedMethod_d109bf</span>;  
</span>@optional  
-<span class="ruby">(?)<span class="constant">XXEncryptedMethod_d109eb</span>;  
</span>@end  
</code></pre><p>查看得到的信息是加过密的，这个加密操作是苹果在部署到app store时做的，所以我们还需要做一步解密操作</p>
<a id="more"></a>
<h3 id="使用Clutch解密支付宝app">使用Clutch解密支付宝app</h3><h4 id="iOS7越狱后的Cydia源里已经下载不到Clutch了，但是我们可以从网上下载好推进iPhone">iOS7越狱后的Cydia源里已经下载不到Clutch了，但是我们可以从网上下载好推进iPhone</h4><p>地址:<a href="https://github.com/KJCracks/Clutch-dl/releases" target="_blank" rel="external">https://github.com/KJCracks/Clutch-dl/releases</a></p>
<h4 id="查看可解密的应用列表">查看可解密的应用列表</h4><pre><code>root<span class="comment"># ./Clutch   </span>

Clutch-<span class="number">1.3</span>.2  
usage: ./Clutch [flags] [<span class="type">application</span> <span class="property">name</span>] [...]  
Applications available: <span class="number">9</span>P_RetinaWallpapers breadtrip Chiizu CodecademyiPhone FisheyeFree food GirlsCamera IMDb InstaDaily InstaTextFree iOne ItsMe3 linecamera Moldiv MPCamera MYXJ NewsBoard Photo Blur Photo Editor PhotoWonder POCO相机 Portal QQPicShow smashbandits Spark tripcamera Tuding_vITC_01 wantu WaterMarkCamera WeiBo Weibo
</code></pre><h4 id="解密支付宝app">解密支付宝app</h4><pre><code><span class="literal">root</span><span class="comment"># ./Clutch Portal</span>
</code></pre><h3 id="导出已解密的支付宝app">导出已解密的支付宝app</h3><p>从上一步骤得知，已解密的ipa位置为：/var/root/Documents/Cracked/支付宝钱包-v8.0.0-(Clutch-1.3.2).ipa<br>将其拷贝到本地去分析</p>
<h3 id="class_dump已解密的支付宝app">class_dump已解密的支付宝app</h3><p>解压.ipa后，到 支付宝钱包-v8.0.0-(Clutch-1.3.2)/Payload/Portal.app 目录下，class_dump已解密的二进制文件</p>
<pre><code><span class="class"><span class="keyword">class</span>-<span class="title">dump</span>-<span class="title">z</span> <span class="title">Portal</span> &gt; ~/<span class="title">Portal</span>-<span class="title">classdump</span>.<span class="title">txt</span></span>
</code></pre><h3 id="iOS运行时工具-cycript">iOS运行时工具-cycript</h3><p>网址：<a href="http://www.cycript.org/" target="_blank" rel="external">http://www.cycript.org/</a></p>
<h3 id="使用introspy追踪分析应用程序">使用introspy追踪分析应用程序</h3><ol>
<li><p>下载 <a href="https://github.com/iSECPartners/Introspy-iOS/releases" target="_blank" rel="external">https://github.com/iSECPartners/Introspy-iOS/releases</a> 将其拷贝到设备中，并执行安装命令<br><code># dpkg -i com.isecpartners.introspy-v0.4-ios_7.deb</code></p>
</li>
<li><p>重启设备：<br><code># killall SpringBoard</code></p>
</li>
<li>到设置中，就可以查看到instrospy的设置选项了</li>
<li>在Introspy-Apps中选择要跟踪的app名称。Instrospy-Settings则提供一些常规跟踪设置选项，默认是全部开启</li>
<li>然后启动想要跟踪的应用程序，就可以直接查看log获取Instrospy为我们跟踪捕获的信息，<br>这里以跟踪支付宝app为例</li>
<li>打开支付宝app，选择添加银行卡，随意添加一个卡号，然后点击下一步</li>
<li>支付宝app反馈添加失败，该卡暂不支持，Instrospy捕获的信息也很清晰：<br><img src="http://img.blog.csdn.net/20140208142548437?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveWl5YWFpeHVleGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></li>
<li>追踪信息被保存为一个数据库introspy-com.alipay.iphoneclient.db，存放在：<br>./private/var/mobile/Applications/4763A8A5-2E1D-4DC2-8376-6CB7A8B98728/Library/<br>introspy-com.alipay.iphoneclient.db</li>
<li>也可以借助Introspy-Analyzer在本地将该数据库解析成一个直观的report.html查看</li>
<li>将introspy-com.alipay.iphoneclient.db拷贝到本地，执行：<br>python introspy.py -p ios —outdir Portal-introspy-html introspy-com.alipay.iphoneclient.db  </li>
<li>就会生成一个 Portal-introspy-html  文件夹，该目录下有 report.html ，用浏览器打开<br><code>open report.html</code></li>
<li>就可以清晰的查看追踪信息了，主要分为DataStorage、IPC、Misc、Network、Crypto六大类信息<br>举个例子，选择Crypto可以查看支付宝app采取了什么加密措施，如果你看过我之前的文章，<br>一定会一眼就认出来手势密码的：</li>
</ol>
<h3 id="使用Cycript修改支付宝app运行时">使用Cycript修改支付宝app运行时</h3><h4 id="安装Cycript">安装Cycript</h4><p>到<a href="http://www.cycript.org/" target="_blank" rel="external">Cycript</a>官方网站下载资源工具，然后推进已越狱的iPhone中，进行安装：</p>
<pre><code>dpkg -<span class="tag">i</span> cycript_0.<span class="number">9.461</span>_iphoneos-arm<span class="class">.deb</span>  
dpkg -<span class="tag">i</span> libffi_1-<span class="number">3.0</span>.<span class="number">10</span>-<span class="number">5</span>_iphoneos-arm<span class="class">.deb</span>  
</code></pre><h4 id="确定支付宝进程">确定支付宝进程</h4><p>运行支付宝app，然后获取它的进程号：</p>
<pre><code><span class="label">Primer:</span>/ root<span class="preprocessor"># ps aux | grep Portal </span>
</code></pre><h4 id="Cycript钩住支付宝进程">Cycript钩住支付宝进程</h4><pre><code>cycript -<span class="tag">p</span> <span class="number">479</span>  
</code></pre><h4 id="获取当前界面的viewController并修改背景色">获取当前界面的viewController并修改背景色</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cy<span class="comment"># var app = [UIApplication sharedApplication]  </span></span><br><span class="line">@<span class="string">"&lt;DFApplication: 0x16530660&gt;"</span>  </span><br><span class="line">  </span><br><span class="line">cy<span class="comment"># app.delegate  </span></span><br><span class="line">@<span class="string">"&lt;DFClientDelegate: 0x165384d0&gt;"</span>  </span><br><span class="line">  </span><br><span class="line">cy<span class="comment"># var keyWindow = app.keyWindow  </span></span><br><span class="line">@<span class="string">"&lt;UIWindow: 0x1654abb0; frame = (0 0; 320 568); gestureRecognizers = &lt;NSArray: 0x1654b190&gt;; layer = &lt;UIWindowLayer: 0x1654ace0&gt;&gt;"</span>  </span><br><span class="line">  </span><br><span class="line">cy<span class="comment"># var rootController = keyWindow.rootViewController  </span></span><br><span class="line">@<span class="string">"&lt;DFNavigationController: 0x1654b6c0&gt;"</span>  </span><br><span class="line">  </span><br><span class="line">cy<span class="comment"># var visibleController = rootController.visibleViewController  </span></span><br><span class="line">@<span class="string">"&lt;ALPLauncherController: 0x166acfb0&gt;"</span>  </span><br><span class="line">  </span><br><span class="line">cy<span class="comment"># visibleController.childViewControllers  </span></span><br><span class="line">@[<span class="string">"&lt;HPHomeWidgetGroup: 0x166afbc0&gt;"</span>,<span class="string">"&lt;ADWRootViewController: 0x165745c0&gt;"</span>,<span class="string">"&lt;ALPAssetsRootViewController: 0x16577250&gt;"</span>,<span class="string">"&lt;SWSecurityWidgetGroup: 0x166bd940&gt;"</span>]  </span><br><span class="line">  </span><br><span class="line">cy<span class="comment"># var assetsController = new Instance(0x16577250)  </span></span><br><span class="line">@<span class="string">"&lt;ALPAssetsRootViewController: 0x16577250&gt;"</span>  </span><br><span class="line">  </span><br><span class="line">cy<span class="comment"># assetsController.view.backgroundColor = [UIColor blueColor]  </span></span><br><span class="line">@<span class="string">"UIDeviceRGBColorSpace 0 0 1 1"</span></span><br></pre></td></tr></table></figure>
<h3 id="gbd">gbd</h3><blockquote>
<p>Cycript can not set break point<br>Cycript can not alter value of variable and register</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//attach GDB-Demo.PID</span><br><span class="line">(gdb) attach GDB-Demo.<span class="number">1438</span></span><br><span class="line"></span><br><span class="line">(gdb)<span class="built_in">break</span> loginButtonTapped:</span><br><span class="line">(gdb)c</span><br><span class="line">(gdb)disas                  //<span class="built_in">print</span> disassemble of the <span class="keyword">function</span></span><br><span class="line">//whenever an external method is called or a property is accessed, the objc_msgSend <span class="keyword">function</span> is called</span><br><span class="line">// blx      ===== objc_msgSend</span><br><span class="line">(gdb)<span class="built_in">break</span> *<span class="number">0</span>x0007e428</span><br><span class="line">(gdb)b *<span class="number">0</span>x0007e45e</span><br><span class="line">(gdb)c</span><br><span class="line">(gdb) x/s <span class="variable">$r1</span></span><br><span class="line">(gdb) po <span class="variable">$r2</span>        //Admin</span><br><span class="line">(gdb)x/a <span class="variable">$2</span>         //<span class="number">0</span>x80910  __CFConstantStringClassReference</span><br><span class="line">(gdb)po    <span class="number">0</span>x80910</span><br><span class="line"></span><br><span class="line">//<span class="built_in">break</span> cmp address</span><br><span class="line">(gdb)b *<span class="number">0</span>x0007e4a8</span><br><span class="line">(gdb)b *<span class="number">0</span>x0007e52c</span><br><span class="line">(gdb)c</span><br><span class="line">(gdb)<span class="built_in">set</span> <span class="variable">$r0</span> = <span class="number">1</span></span><br><span class="line">(gdb)<span class="built_in">set</span> <span class="variable">$r0</span> = <span class="number">1</span></span><br><span class="line">(gdb)c</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">break</span> objc_msgSend</span><br><span class="line">c                    //<span class="built_in">continue</span></span><br><span class="line"><span class="built_in">help</span> x               // 显示命令</span><br><span class="line">x/a <span class="variable">$r0</span>              //object  show  register <span class="number">0</span></span><br><span class="line">x/s <span class="variable">$r1</span>              //string</span><br><span class="line">x/s <span class="variable">$r2</span>              //</span><br></pre></td></tr></table></figure>
<h4 id="批处理命令">批处理命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(gdb)commands</span><br><span class="line">&gt;x/a  <span class="variable">$r0</span></span><br><span class="line">&gt;x/s  <span class="variable">$r1</span></span><br><span class="line">&gt;c</span><br><span class="line">&gt;end</span><br><span class="line">c</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(gdb)commands</span><br><span class="line">&gt;<span class="built_in">printf</span> <span class="string">"[%s, %s]\n"</span>,(char *)class_getName(**<span class="variable">$r0</span>),<span class="variable">$1</span></span><br><span class="line">&gt;c</span><br><span class="line">&gt;end</span><br></pre></td></tr></table></figure>
<h3 id="JailBroken_bypass">JailBroken bypass</h3><ol>
<li>class-dump-z find isJailBroken;</li>
<li>Cycript -p 2166</li>
<li>JailbreakDetector-&gt;isa.messages</li>
<li>JailbreakDetector-&gt;isa.messages[‘isJailbroken’] = function(){return false;}</li>
</ol>
<h3 id="Ida_patch">Ida patch</h3><p>~/Library/Application\ Support/iPhone\ Simulator/<br>~/Library/Developer/CoreSimulator/Devices/<device-specific-hash>/data/Container‌​s/Bundle/Application/<app-specific-hash></app-specific-hash></device-specific-hash></p>
<h4 id="IDA">IDA</h4><ol>
<li><p>show graphical format, double click on the function name in the functions window<br>and press Space</p>
</li>
<li><p>If you want to switch to the previous view, you can press Space again</p>
</li>
<li>As we can clearly see, the address of this instruction is 00002CB1. However, we cannot just go ahead and change the address at this instruction, This is because this address is the absolute address of this instruction and it will be different every time the application is launched. What we need to find out is the offset of this instruction relative to the Mach-O binary. This instruction has to be modified in the code section of the assembly. Hence the offset of this instruction relative to the binary can be calculated as<figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//(Offset <span class="keyword">of</span> code section relative to binary) +  (Absolute address <span class="keyword">of</span> the instruction to be changed -  Starting address <span class="keyword">of</span> the code section)</span><br><span class="line">Absolute address : 00002A62</span><br><span class="line"></span><br><span class="line">otool -l GDB-Demo</span><br><span class="line">//Look for the text section</span><br><span class="line"><span class="title">Section</span></span><br><span class="line">  sectname __text</span><br><span class="line">   segname __TEXT</span><br><span class="line">      addr 0x00000001000016c9</span><br><span class="line">      size 0x0000000000000329</span><br><span class="line">    offset 5833</span><br><span class="line">     align 2^0 (1)</span><br><span class="line">    reloff 0</span><br><span class="line">    nreloc 0</span><br><span class="line">     flags 0x80000400</span><br><span class="line"> reserved1 0</span><br><span class="line"> reserved2 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> start address: 0x00000001000016c9</span><br><span class="line"> offset: 5833</span><br><span class="line"></span><br><span class="line"> 5833(Decimal) + (0x00002A62(Hex)- 0x00000001000016c9(Hex)) = 0x1cb1</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="URL_Schemes">URL Schemes</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="xml">document.location=‘tel://1123456789’<span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">iframe</span> <span class="attribute">src</span>=<span class="value">“tel:</span>//<span class="attribute">1123456789</span>”&gt;</span><span class="tag">&lt;/<span class="title">iframe</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure>
<h3 id="IRET">IRET</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://www.veracode.com/sites/default/files/Resources/Tools/iRETTool.zip</span><br><span class="line"></span><br><span class="line">unzip iRETTool.zip</span><br><span class="line">dpkg -i iRET.deb  //reboot your device <span class="keyword">then</span> launch the app</span><br><span class="line"></span><br><span class="line">//install dumpdecrypted</span><br></pre></td></tr></table></figure>
<h3 id="dumpdecrypted">dumpdecrypted</h3><ol>
<li>download file</li>
<li>make</li>
<li>copy .dylib to your device//drag and drop inside the folder /Library using iExplorer</li>
</ol>
<h3 id="Theos">Theos</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> THEOS=/opt/theos</span><br><span class="line">svn co http://svn.howett.net/svn/theos/trunk <span class="variable">$THEOS</span></span><br></pre></td></tr></table></figure>
<h4 id="ldid">ldid</h4><p>ldid的作用是模拟给iPhone签名的流程，使得你能够在真实的设备上安装越狱的apps/hacks</p>
<pre><code>cp ~<span class="regexp">/Copy/ios</span><span class="regexp">/ldid /opt</span><span class="regexp">/theos/bin</span><span class="regexp">/ldid</span>
</code></pre><h4 id="dkpg">dkpg</h4><pre><code><span class="keyword">brew </span>install dkpg
</code></pre><h4 id="theos_使用">theos 使用</h4><ol>
<li>下载libsubstrate.dylib，然后copy到/opt/theos/lib <a href="http://www.mediafire.com/download/2upm53uzzj0488u/libsubstrate.dylib" target="_blank" rel="external">http://www.mediafire.com/download/2upm53uzzj0488u/libsubstrate.dylib</a><br>2．iOS 头文件<br>很可能theos本身就自带了你所需要的头文件，但是，如果你编译程序的时候提示你头文件相关的问题，那你就需要准备相关的头文件了。要么从设备上dump头文件，要么google，建议你先google一下，看其他人有没已经提供了这些头文件。<br>一旦你有这些头文件，记得把它们放在/opt/theos/include</li>
<li>创建项目<br><code>$THEOS/bin/nic.pl</code></li>
<li><p>The Tweak File</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim Tweak.xm</span><br><span class="line">%hook Springboard <span class="comment">// overwrite methods here %end </span></span><br><span class="line"></span><br><span class="line">#<span class="keyword">import</span>&lt;SpringBoard/SpringBoard.h&gt;  </span><br><span class="line">%hook SpringBoard </span><br><span class="line"> -(<span class="typename">void</span>)<span class="string">applicationDidFinishLaunching:</span>(id)application &#123; </span><br><span class="line">%orig; </span><br><span class="line"> UIAlertView *alert = [[UIAlertViewalloc] </span><br><span class="line"><span class="string">initWithTitle:</span>@<span class="string">"Welcome"</span>  <span class="string">message:</span>@<span class="string">"Welcome to your iPhone Brandon!"</span>  </span><br><span class="line"><span class="string">delegate:</span><span class="string">nilcancelButtonTitle:</span>@<span class="string">"Thanks"</span>  </span><br><span class="line"><span class="string">otherButtonTitles:</span>nil] </span><br><span class="line">[alert show]; </span><br><span class="line">[alert release];</span><br><span class="line"> &#125; </span><br><span class="line"> %end</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加Framework</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim Makefile</span><br><span class="line"></span><br><span class="line">WelcomeWagon_FRAMEWORKS = <span class="built_in">UIKit</span><span class="comment">//add</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Building, Packaging, Installing</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span></span><br><span class="line"><span class="built_in">make</span> <span class="keyword">package</span></span><br><span class="line">Dpkg –i     <span class="comment">//install</span></span><br><span class="line">dpkg -r     <span class="comment">//remove</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="logify">logify</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir Headers</span><br><span class="line">class-dump-z App -H -o Headers</span><br><span class="line"><span class="built_in">cd</span> Headers//check header files</span><br><span class="line"></span><br><span class="line">//add trace the method </span><br><span class="line">/opt/theos/bin/logify.pl ClientSideInjectionVC.h &gt; Tweak.xm</span><br><span class="line">/opt/theos/bin/logify.pl JailbreakDetectionVC.h &gt; Tweak.xm</span><br><span class="line">/opt/theos/bin/logify.pl DamnVulnerableAppUtilities.h &gt; Tweak.xm</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="class-dump-z">class-dump-z</h3><h4 id="下载配置class_dump_z">下载配置class_dump_z</h4><p>前往 <a href="https://code.google.com/p/networkpx/wiki/class_dump_z">https://code.google.com/p/networkpx/wiki/class_dump_z</a> ，下载tar包，然后解压配置到本地环境<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>tar -zxvf <span class="class"><span class="keyword">class</span>-<span class="title">dump</span>-<span class="title">z_0</span>.2<span class="title">a</span>.<span class="title">tar</span>.<span class="title">gz</span>  </span></span><br><span class="line"><span class="variable">$ </span>sudo cp mac_x86/<span class="class"><span class="keyword">class</span>-<span class="title">dump</span>-<span class="title">z</span> /<span class="title">usr</span>/<span class="title">bin</span>/</span></span><br></pre></td></tr></table></figure></p>
<h4 id="class_dump_分文件">class_dump 分文件</h4><pre><code><span class="keyword">class</span>-dump-z <span class="keyword">App</span> -<span class="keyword">H</span> -o outputdir
</code></pre><h4 id="class_dump支付宝app">class_dump支付宝app</h4><pre><code>$ class-dump-z Portal &gt; Portal-dump.txt  

@protocol XXEncryptedProtocol_10764b0  
-<span class="ruby">(?)<span class="constant">XXEncryptedMethod_d109df</span>;  
</span>-<span class="ruby">(?)<span class="constant">XXEncryptedMethod_d109d3</span>;  
</span>-<span class="ruby">(?)<span class="constant">XXEncryptedMethod_d109c7</span>;  
</span>-<span class="ruby">(?)<span class="constant">XXEncryptedMethod_d109bf</span>;  
</span>@optional  
-<span class="ruby">(?)<span class="constant">XXEncryptedMethod_d109eb</span>;  
</span>@end  
</code></pre><p>查看得到的信息是加过密的，这个加密操作是苹果在部署到app store时做的，所以我们还需要做一步解密操作</p>]]>
    
    </summary>
    
      <category term="IOS" scheme="http://ytlvy.com/categories/IOS/"/>
    
      <category term="reverse" scheme="http://ytlvy.com/categories/IOS/reverse/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git tutorials -- workflows]]></title>
    <link href="http://ytlvy.com/2015/05/29/git-tutorials-workflows/"/>
    <id>http://ytlvy.com/2015/05/29/git-tutorials-workflows/</id>
    <published>2015-05-29T02:20:33.000Z</published>
    <updated>2015-06-05T07:18:51.000Z</updated>
    <content type="html"><![CDATA[<h2 id="git_tutorials">git tutorials</h2><h3 id="Centralized_workflow">Centralized workflow</h3><p><img src="https://www.atlassian.com/git/images/tutorials/collaborating/comparing-workflows/centralized-workflow/01.svg" alt=""><br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">//Someone initializes <span class="operator">the</span> central repository</span><br><span class="line">ssh user@host git init <span class="comment">--bare /path/to/repo.git</span></span><br><span class="line"><span class="comment"></span><br><span class="line">//Everybody clones the central repository</span></span><br><span class="line">git clone ssh://user@host/path/<span class="built_in">to</span>/repo.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># edit stage commits</span></span><br><span class="line"><span class="comment"></span><br><span class="line">//origin is the remote connection to the central repository</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line"><span class="comment"></span><br><span class="line">//another push</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line">error: failed <span class="built_in">to</span> push some refs <span class="built_in">to</span> <span class="string">'/path/to/repo.git'</span></span><br><span class="line">hint: Updates were rejected because <span class="operator">the</span> tip <span class="operator">of</span> your current branch is behind</span><br><span class="line">hint: its remote counterpart. Merge <span class="operator">the</span> remote changes (e.g. <span class="string">'git pull'</span>)</span><br><span class="line">hint: <span class="keyword">before</span> pushing again.</span><br><span class="line">hint: See <span class="operator">the</span> <span class="string">'Note about fast-forwards'</span> <span class="operator">in</span> <span class="string">'git push --help'</span> <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">git pull <span class="comment">--rebase origin master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Unmerged paths:</span></span><br><span class="line"><span class="comment"># (use "git reset HEAD &lt;some-file&gt;..." to unstage)</span></span><br><span class="line"><span class="comment"># (use "git add/rm &lt;some-file&gt;..." as appropriate to mark resolution)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># both modified: &lt;some-file&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># edit the file</span></span><br><span class="line">git <span class="built_in">add</span> &lt;some-<span class="built_in">file</span>&gt; </span><br><span class="line">git rebase <span class="comment">--continue</span></span><br><span class="line"><span class="comment"></span><br><span class="line">//you can abort and roll back</span><span class="comment"></span><br><span class="line">//right back to where you started before you ran [git pull --rebase]</span></span><br><span class="line">git rebase <span class="comment">--abort</span></span><br><span class="line"><span class="comment"></span><br><span class="line">//or push</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="Feature_Branch_workflow">Feature Branch workflow</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">git</span> checkout -<span class="keyword">b </span><span class="keyword">marys-feature </span>master</span><br><span class="line"></span><br><span class="line"><span class="label">#Mary</span> edits, stages, <span class="keyword">and </span>commits changes</span><br><span class="line"><span class="label">git</span> status</span><br><span class="line"><span class="label">git</span> <span class="keyword">add </span>&lt;some-file&gt;</span><br><span class="line"><span class="label">git</span> commit</span><br><span class="line"></span><br><span class="line">//This command <span class="keyword">pushes </span><span class="keyword">marys-feature </span>to the central repository (origin), <span class="keyword">and </span>the -u flag <span class="keyword">adds </span><span class="keyword">it </span>as a remote tracking <span class="keyword">branch. </span>After setting up the tracking <span class="keyword">branch, </span><span class="keyword">Mary </span>can call git <span class="keyword">push </span>without any parameters to <span class="keyword">push </span>her feature.</span><br><span class="line"></span><br><span class="line"><span class="label">git</span> <span class="keyword">push </span>-u origin <span class="keyword">marys-feature </span>//first time</span><br><span class="line"><span class="label">git</span> <span class="keyword">push </span>origin <span class="keyword">marys-feature </span>   // after</span><br><span class="line"></span><br><span class="line"><span class="label">git</span> <span class="keyword">push</span><br><span class="line"></span></span><br><span class="line">// merge the feature into the stable project </span><br><span class="line"><span class="label">git</span> checkout master</span><br><span class="line"><span class="label">git</span> pull</span><br><span class="line"><span class="label">git</span> pull origin <span class="keyword">marys-feature</span><br><span class="line"></span><span class="label">git</span> <span class="keyword">push</span></span><br></pre></td></tr></table></figure>
<p>First, whoever’s performing the merge needs to check out their master branch and make sure it’s up to date. Then, git pull origin marys-feature merges the central repository’s copy of marys-feature. You could also use a simple git merge marys-feature, but the command shown above makes sure you’re always pulling the most up-to-date version of the feature branch. Finally, the updated master needs to get pushed back to origin.</p>
<h3 id="Gitflow_Workflow">Gitflow Workflow</h3><h4 id="Historical_Branches">Historical Branches</h4><p>Instead of a single master branch, this workflow uses two branches to record the history of the project. The master branch stores the official release history, and the develop branch serves as an integration branch for features. It’s also convenient to tag all commits in the master branch with a version number.</p>
<h4 id="Feature_Branches">Feature Branches</h4><p>Each new feature should reside in its own branch, which can be pushed to the central repository for backup/collaboration. But, instead of branching off of master, feature branches use develop as their parent branch. When a feature is complete, it gets merged back into develop. Features should never interact directly with master.</p>
<h4 id="Example">Example</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">//1. one developer to <span class="operator"><span class="keyword">create</span> an empty develop branch locally <span class="keyword">and</span> push it <span class="keyword">to</span> the <span class="keyword">server</span></span><br><span class="line">git branch develop</span><br><span class="line">git push -u origin develop</span><br><span class="line"></span><br><span class="line">//<span class="number">2</span>  Other developers should <span class="keyword">now</span> clone the central repository <span class="keyword">and</span> <span class="keyword">create</span> a tracking branch <span class="keyword">for</span> develop</span><br><span class="line">git clone ssh://<span class="keyword">user</span>@host/path/<span class="keyword">to</span>/repo.git</span><br><span class="line">git checkout -b develop origin/develop</span><br><span class="line"></span><br><span class="line">// <span class="number">3</span> <span class="keyword">create</span> branche <span class="keyword">for</span> features develop</span><br><span class="line">git checkout -b <span class="keyword">some</span>-feature develop</span><br><span class="line"></span><br><span class="line">// <span class="number">4</span> edit, stage, <span class="keyword">commit</span></span><br><span class="line">git <span class="keyword">status</span></span><br><span class="line">git <span class="keyword">add</span> &lt;<span class="keyword">some</span>-file&gt;</span><br><span class="line">git <span class="keyword">commit</span></span><br><span class="line"></span><br><span class="line">// <span class="number">5</span> makes sure the develop branch <span class="keyword">is</span> up <span class="keyword">to</span> <span class="built_in">date</span> </span><br><span class="line">git pull origin develop</span><br><span class="line"></span><br><span class="line">// <span class="number">6</span> <span class="keyword">merge</span> <span class="keyword">or</span> rebase</span><br><span class="line">git checkout develop</span><br><span class="line">git <span class="keyword">merge</span> <span class="keyword">some</span>-feature</span><br><span class="line">git push</span><br><span class="line">git branch -d <span class="keyword">some</span>-feature</span><br><span class="line"></span><br><span class="line">//<span class="number">7</span> <span class="keyword">prepare</span> a <span class="keyword">release</span></span><br><span class="line">//clean up the <span class="keyword">release</span>, test everything, <span class="keyword">update</span> the documentation, <span class="keyword">and</span> <span class="keyword">do</span> <span class="keyword">any</span> other kind <span class="keyword">of</span> preparation <span class="keyword">for</span> the upcoming <span class="keyword">release</span></span><br><span class="line">git checkout -b <span class="keyword">release</span>-<span class="number">0.1</span> develop</span><br><span class="line"></span><br><span class="line">//<span class="number">8</span> merges it <span class="keyword">into</span> <span class="keyword">master</span> <span class="keyword">and</span> develop, <span class="keyword">then</span> deletes the <span class="keyword">release</span> branch</span><br><span class="line">git checkout <span class="keyword">master</span></span><br><span class="line">git <span class="keyword">merge</span> <span class="keyword">release</span>-<span class="number">0.1</span></span><br><span class="line">git push</span><br><span class="line">git checkout develop</span><br><span class="line">git <span class="keyword">merge</span> <span class="keyword">release</span>-<span class="number">0.1</span></span><br><span class="line">git push</span><br><span class="line">git branch -d <span class="keyword">release</span>-<span class="number">0.1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//<span class="number">9</span> tag the <span class="keyword">commit</span> <span class="keyword">for</span> easy reference</span><br><span class="line">git tag -a <span class="number">0.1</span> -m <span class="string">"Initial public release"</span> <span class="keyword">master</span></span><br><span class="line">git push <span class="comment">--tags</span></span><br><span class="line"></span><br><span class="line">//<span class="number">10</span> creates a maintenance branch off <span class="keyword">of</span> <span class="keyword">master</span>, </span><br><span class="line">//fixes the issue <span class="keyword">with</span> <span class="keyword">as</span> many commits <span class="keyword">as</span> necessary, </span><br><span class="line">//<span class="keyword">then</span> merges it directly back <span class="keyword">into</span> <span class="keyword">master</span> <span class="keyword">and</span> develop</span><br><span class="line"></span><br><span class="line">git checkout -b issue-#<span class="number">001</span> <span class="keyword">master</span></span><br><span class="line"># Fix the bug</span><br><span class="line">git checkout <span class="keyword">master</span></span><br><span class="line">git <span class="keyword">merge</span> issue-#<span class="number">001</span></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line">git checkout develop</span><br><span class="line">git <span class="keyword">merge</span> issue-#<span class="number">001</span></span><br><span class="line">git push</span><br><span class="line">git branch -d issue-#<span class="number">001</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Forking_WorkFlow">Forking WorkFlow</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">Example</span><br><span class="line">//1. <span class="operator"><span class="keyword">create</span> an official repository <span class="keyword">on</span> a <span class="keyword">server</span></span><br><span class="line">ssh <span class="keyword">user</span>@host</span><br><span class="line">git init <span class="comment">--bare /path/to/repo.git</span></span><br><span class="line"></span><br><span class="line">//<span class="number">2.</span> fork</span><br><span class="line"></span><br><span class="line">//<span class="number">3</span> clone</span><br><span class="line">git clone https://<span class="keyword">user</span>@bitbucket.org/<span class="keyword">user</span>/repo.git</span><br><span class="line">git remote <span class="keyword">add</span> upstream https://bitbucket.org/maintainer/repo</span><br><span class="line">git remote <span class="keyword">add</span> upstream https://<span class="keyword">user</span>@bitbucket.org/maintainer/repo.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//<span class="number">4.</span>  edit, <span class="keyword">commit</span> branches</span><br><span class="line">git checkout -b <span class="keyword">some</span>-feature</span><br><span class="line"># Edit <span class="keyword">some</span> code</span><br><span class="line">git <span class="keyword">commit</span> -a -m <span class="string">"Add first draft of some feature"</span></span><br><span class="line"></span><br><span class="line">//<span class="number">5.</span> <span class="keyword">update</span> <span class="keyword">master</span></span><br><span class="line">git pull upstream <span class="keyword">master</span> </span><br><span class="line"></span><br><span class="line">//<span class="number">6.</span> </span><br><span class="line">git push origin feature-branch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//<span class="number">7.</span> maintainer <span class="keyword">view</span> a diff <span class="keyword">of</span> the changes, comment <span class="keyword">on</span> it, <span class="keyword">and</span> perform the <span class="keyword">merge</span></span><br><span class="line">git <span class="keyword">fetch</span> https://bitbucket.org/<span class="keyword">user</span>/repo feature-branch</span><br><span class="line"># Inspect the changes</span><br><span class="line">git checkout <span class="keyword">master</span></span><br><span class="line">git <span class="keyword">merge</span> FETCH_HEAD</span><br><span class="line"></span><br><span class="line">//<span class="number">8.</span> <span class="keyword">merge</span> publish</span><br><span class="line">git push origin <span class="keyword">master</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//<span class="number">9.</span> others <span class="keyword">update</span></span><br><span class="line">git pull upstream <span class="keyword">master</span></span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="git_tutorials">git tutorials</h2><h3 id="Centralized_workflow">Centralized workflow</h3><p><img src="https://www.atlassian.com/git/images/tutorials/collaborating/comparing-workflows/centralized-workflow/01.svg" alt=""><br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">//Someone initializes <span class="operator">the</span> central repository</span><br><span class="line">ssh user@host git init <span class="comment">--bare /path/to/repo.git</span></span><br><span class="line"><span class="comment"></span><br><span class="line">//Everybody clones the central repository</span></span><br><span class="line">git clone ssh://user@host/path/<span class="built_in">to</span>/repo.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># edit stage commits</span></span><br><span class="line"><span class="comment"></span><br><span class="line">//origin is the remote connection to the central repository</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line"><span class="comment"></span><br><span class="line">//another push</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line">error: failed <span class="built_in">to</span> push some refs <span class="built_in">to</span> <span class="string">'/path/to/repo.git'</span></span><br><span class="line">hint: Updates were rejected because <span class="operator">the</span> tip <span class="operator">of</span> your current branch is behind</span><br><span class="line">hint: its remote counterpart. Merge <span class="operator">the</span> remote changes (e.g. <span class="string">'git pull'</span>)</span><br><span class="line">hint: <span class="keyword">before</span> pushing again.</span><br><span class="line">hint: See <span class="operator">the</span> <span class="string">'Note about fast-forwards'</span> <span class="operator">in</span> <span class="string">'git push --help'</span> <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">git pull <span class="comment">--rebase origin master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Unmerged paths:</span></span><br><span class="line"><span class="comment"># (use "git reset HEAD &lt;some-file&gt;..." to unstage)</span></span><br><span class="line"><span class="comment"># (use "git add/rm &lt;some-file&gt;..." as appropriate to mark resolution)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># both modified: &lt;some-file&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># edit the file</span></span><br><span class="line">git <span class="built_in">add</span> &lt;some-<span class="built_in">file</span>&gt; </span><br><span class="line">git rebase <span class="comment">--continue</span></span><br><span class="line"><span class="comment"></span><br><span class="line">//you can abort and roll back</span><span class="comment"></span><br><span class="line">//right back to where you started before you ran [git pull --rebase]</span></span><br><span class="line">git rebase <span class="comment">--abort</span></span><br><span class="line"><span class="comment"></span><br><span class="line">//or push</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="Git" scheme="http://ytlvy.com/categories/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git tutorials -- Advanced Tips]]></title>
    <link href="http://ytlvy.com/2015/05/29/git-tutorials-advanced-tips/"/>
    <id>http://ytlvy.com/2015/05/29/git-tutorials-advanced-tips/</id>
    <published>2015-05-29T02:06:02.000Z</published>
    <updated>2015-06-05T06:58:24.000Z</updated>
    <content type="html"><![CDATA[<h2 id="git_tutorials">git tutorials</h2><h3 id="Splitting_a_Commit">Splitting a Commit</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i HEAD~3</span><br><span class="line"></span><br><span class="line">// edit second to edit</span><br><span class="line">pick f7f3f6d changed my name a bit</span><br><span class="line">edit 310154e updated README formatting and added blame</span><br><span class="line">pick a5f4a0d added cat-file</span><br><span class="line"></span><br><span class="line">//<span class="operator"><span class="keyword">do</span> a mixed <span class="keyword">reset</span> <span class="keyword">of</span> that <span class="keyword">commit</span> <span class="keyword">with</span> <span class="string">`git reset HEAD^`</span> effectively undoes that <span class="keyword">commit</span> <span class="keyword">and</span> <span class="keyword">leaves</span> the modified files unstaged</span><br><span class="line">$ git <span class="keyword">reset</span> HEAD^</span><br><span class="line">$ git <span class="keyword">add</span> README</span><br><span class="line">$ git <span class="keyword">commit</span> -m <span class="string">'updated README formatting'</span></span><br><span class="line">$ git <span class="keyword">add</span> lib/simplegit.rb</span><br><span class="line">$ git <span class="keyword">commit</span> -m <span class="string">'added blame'</span></span><br><span class="line">$ git rebase <span class="comment">--continue</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ git <span class="keyword">log</span> -<span class="number">4</span> <span class="comment">--pretty=format:"%h %s"</span></span><br><span class="line"><span class="number">1</span>c002dd added cat-file</span><br><span class="line"><span class="number">9</span>b29157 added blame</span><br><span class="line"><span class="number">35</span>cfb2b updated README formatting</span><br><span class="line">f3cc40e <span class="keyword">changed</span> my name a <span class="built_in">bit</span></span></span><br></pre></td></tr></table></figure>
<h3 id="The_Nuclear_Option:_filter-branch">The Nuclear Option: filter-branch</h3><h4 id="Removing_a_File_from_Every_Commit">Removing a File from Every Commit</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//<span class="built_in">remove</span> passwords.txt form <span class="keyword">all</span> <span class="keyword">history</span></span><br><span class="line">$ git <span class="built_in">filter</span>-branch --tree-<span class="built_in">filter</span> <span class="string">'rm -f passwords.txt'</span> HEAD</span><br><span class="line"></span><br><span class="line">//<span class="built_in">remove</span> <span class="keyword">all</span> accidentally committed editor backup <span class="keyword">files</span></span><br><span class="line">git <span class="built_in">filter</span>-branch --tree-<span class="built_in">filter</span> <span class="string">'rm -f *~'</span> HEAD.</span><br><span class="line"></span><br><span class="line">//To run <span class="built_in">filter</span>-branch <span class="keyword">on</span> <span class="keyword">all</span> your branches, you can pass --<span class="keyword">all</span> <span class="keyword">to</span> the <span class="keyword">command</span></span><br><span class="line">$ git <span class="built_in">filter</span>-branch --tree-<span class="built_in">filter</span> <span class="string">'rm -f passwords.txt'</span> HEAD --<span class="keyword">all</span></span><br></pre></td></tr></table></figure>
<h3 id="important">important</h3><ol>
<li>you should always create a new branch before adding commits to a detached HEAD</li>
<li>For this reason, git revert should be used to undo changes on a public branch, and git reset should be reserved for undoing changes on a private branch</li>
</ol>
<a id="more"></a>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="git_tutorials">git tutorials</h2><h3 id="Splitting_a_Commit">Splitting a Commit</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i HEAD~3</span><br><span class="line"></span><br><span class="line">// edit second to edit</span><br><span class="line">pick f7f3f6d changed my name a bit</span><br><span class="line">edit 310154e updated README formatting and added blame</span><br><span class="line">pick a5f4a0d added cat-file</span><br><span class="line"></span><br><span class="line">//<span class="operator"><span class="keyword">do</span> a mixed <span class="keyword">reset</span> <span class="keyword">of</span> that <span class="keyword">commit</span> <span class="keyword">with</span> <span class="string">`git reset HEAD^`</span> effectively undoes that <span class="keyword">commit</span> <span class="keyword">and</span> <span class="keyword">leaves</span> the modified files unstaged</span><br><span class="line">$ git <span class="keyword">reset</span> HEAD^</span><br><span class="line">$ git <span class="keyword">add</span> README</span><br><span class="line">$ git <span class="keyword">commit</span> -m <span class="string">'updated README formatting'</span></span><br><span class="line">$ git <span class="keyword">add</span> lib/simplegit.rb</span><br><span class="line">$ git <span class="keyword">commit</span> -m <span class="string">'added blame'</span></span><br><span class="line">$ git rebase <span class="comment">--continue</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ git <span class="keyword">log</span> -<span class="number">4</span> <span class="comment">--pretty=format:"%h %s"</span></span><br><span class="line"><span class="number">1</span>c002dd added cat-file</span><br><span class="line"><span class="number">9</span>b29157 added blame</span><br><span class="line"><span class="number">35</span>cfb2b updated README formatting</span><br><span class="line">f3cc40e <span class="keyword">changed</span> my name a <span class="built_in">bit</span></span></span><br></pre></td></tr></table></figure>
<h3 id="The_Nuclear_Option:_filter-branch">The Nuclear Option: filter-branch</h3><h4 id="Removing_a_File_from_Every_Commit">Removing a File from Every Commit</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//<span class="built_in">remove</span> passwords.txt form <span class="keyword">all</span> <span class="keyword">history</span></span><br><span class="line">$ git <span class="built_in">filter</span>-branch --tree-<span class="built_in">filter</span> <span class="string">'rm -f passwords.txt'</span> HEAD</span><br><span class="line"></span><br><span class="line">//<span class="built_in">remove</span> <span class="keyword">all</span> accidentally committed editor backup <span class="keyword">files</span></span><br><span class="line">git <span class="built_in">filter</span>-branch --tree-<span class="built_in">filter</span> <span class="string">'rm -f *~'</span> HEAD.</span><br><span class="line"></span><br><span class="line">//To run <span class="built_in">filter</span>-branch <span class="keyword">on</span> <span class="keyword">all</span> your branches, you can pass --<span class="keyword">all</span> <span class="keyword">to</span> the <span class="keyword">command</span></span><br><span class="line">$ git <span class="built_in">filter</span>-branch --tree-<span class="built_in">filter</span> <span class="string">'rm -f passwords.txt'</span> HEAD --<span class="keyword">all</span></span><br></pre></td></tr></table></figure>
<h3 id="important">important</h3><ol>
<li>you should always create a new branch before adding commits to a detached HEAD</li>
<li>For this reason, git revert should be used to undo changes on a public branch, and git reset should be reserved for undoing changes on a private branch</li>
</ol>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[git tutorials -- Collaborating]]></title>
    <link href="http://ytlvy.com/2015/05/29/git-tutorials-collaborating/"/>
    <id>http://ytlvy.com/2015/05/29/git-tutorials-collaborating/</id>
    <published>2015-05-29T02:05:45.000Z</published>
    <updated>2015-06-05T07:08:39.000Z</updated>
    <content type="html"><![CDATA[<h2 id="git_tutorials">git tutorials</h2><h3 id="git_remote">git remote</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//List <span class="operator">the</span> remote connections you have <span class="built_in">to</span> other repositories</span><br><span class="line">git remote</span><br><span class="line"><span class="comment"></span><br><span class="line">//List the remote connections you have to other repositories, include the URL</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line">git remote <span class="built_in">add</span> &lt;name&gt; &lt;url&gt;</span><br><span class="line">git remote rm &lt;name&gt;</span><br><span class="line">git remote <span class="built_in">rename</span> &lt;old-name&gt; &lt;<span class="built_in">new</span>-name&gt;</span><br></pre></td></tr></table></figure>
<h4 id="The_origin_Remote">The origin Remote</h4><p>When you clone a repository with git clone, it automatically creates a remote connection called origin pointing back to the cloned repository. This is useful for developers creating a local copy of a central repository, since it provides an easy way to pull upstream changes or publish local commits. This behavior is also why most Git-based projects call their central repository origin.</p>
<a id="more"></a>
<h3 id="git_fetch">git fetch</h3><p>The git fetch command imports commits from a remote repository into your local repo. The resulting commits are stored as remote branches instead of the normal local branches that we’ve been working with. This gives you a chance to review changes before integrating them into your copy of the project.</p>
<p>//Fetch all of the branches from the repository. This also downloads all of the required commits and files from the other repository.<br><code>git fetch &lt;remote&gt;</code></p>
<p>git fetch <remote> <branch></branch></remote></p>
<h4 id="Discussion">Discussion</h4><p>Fetching is what you do when you want to see what everybody else has been working on. Since fetched content is represented as a remote branch, it has absolutely no effect on your local development work. This makes fetching a safe way to review commits before integrating them with your local repository. It’s similar to svn update in that it lets you see how the central history has progressed, but it doesn’t force you to actually merge the changes into your repository.</p>
<h4 id="Remote_Branches">Remote Branches</h4><p>Remote branches are just like local branches, except they represent commits from somebody else’s repository. You can check out a remote branch just like a local one, but this puts you in a detached HEAD state (just like checking out an old commit). You can think of them as read-only branches. To view your remote branches, simply pass the -r flag to the git branch command. Remote branches are prefixed by the remote they belong to so that you don’t mix them up with local branches. For example, the next code snippet shows the branches you might see after fetching from the origin remote:</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git branch -r</span><br><span class="line"><span class="preprocessor"># origin/master</span></span><br><span class="line"><span class="preprocessor"># origin/develop</span></span><br><span class="line"><span class="preprocessor"># origin/some-feature</span></span><br></pre></td></tr></table></figure>
<p>Again, you can inspect these branches with the usual git checkout and git log commands. If you approve the changes a remote branch contains, you can merge it into a local branch with a normal git merge. So, unlike SVN, synchronizing your local repository with a remote repository is actually a two-step process: fetch, then merge. The git pull command is a convenient shortcut for this process.</p>
<h4 id="Examples">Examples</h4><p>This example walks through the typical workflow for synchronizing your local repository with the central repository’s master branch.</p>
<p><code>git fetch origin</code></p>
<p>This will display the branches that were downloaded:</p>
<figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a1e8fb5..<span class="number">45e</span>66a4 master<span class="function"> -&gt;</span> origin/master</span><br><span class="line">a1e8fb5..<span class="number">9e</span>8ab1c develop<span class="function"> -&gt;</span> origin/develop</span><br><span class="line">* [<span class="keyword">new</span> branch] some-feature<span class="function"> -&gt;</span> origin/some-feature</span><br></pre></td></tr></table></figure>
<p>The commits from these new remote branches are shown as squares instead of circles in the diagram below. As you can see, git fetch gives you access to the entire branch structure of another repository.</p>
<p>To see what commits have been added to the upstream master, you can run a git log using origin/master as a filter</p>
<p><code>git log --oneline master..origin/master</code></p>
<p>To approve the changes and merge them into your local master branch with the following commands:<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git <span class="command">log</span> origin/master</span><br></pre></td></tr></table></figure></p>
<p>Then we can use git merge origin/master<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="operator"><span class="keyword">merge</span> origin/<span class="keyword">master</span></span></span><br></pre></td></tr></table></figure></p>
<p>The origin/master and master branches now point to the same commit, and you are synchronized with the upstream developments.</p>
<h3 id="git_pull">git pull</h3><p>Merging upstream changes into your local repository is a common task in Git-based collaboration workflows. We already know how to do this with git fetch followed by git merge, but git pull rolls this into a single command.</p>
<p><code>git pull &lt;remote&gt;</code><br>Fetch the specified remote’s copy of the current branch and immediately merge it into the local copy. This is the same as git fetch <remote> followed by git merge origin/<current-branch>.</current-branch></remote></p>
<p><code>git pull --rebase &lt;remote&gt;</code><br>instead of using git merge to integrate the remote branch with the local one, use git rebase</p>
<h4 id="Pulling_via_Rebase">Pulling via Rebase</h4><p>The —rebase option can be used to ensure a linear history by preventing unnecessary merge commits. Many developers prefer rebasing over merging, since it’s like saying, “I want to put my changes on top of what everybody else has done.” In this sense, using git pull with the —rebase flag is even more like svn update than a plain git pull.</p>
<p><code>git config --global branch.autosetuprebase always</code><br>After running that command, all git pull commands will integrate via git rebase instead of git merge.</p>
<h4 id="Examples-1">Examples</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git pull <span class="comment">--rebase origin</span></span><br></pre></td></tr></table></figure>
<h3 id="git_push">git push</h3><p><code>git push &lt;remote&gt; &lt;branch&gt;</code><br>Push the specified branch to <remote>, along with all of the necessary commits and internal objects. This creates a local branch in the destination repository</remote></p>
<p><code>git push &lt;remote&gt; --force</code></p>
<p><code>git push &lt;remote&gt; --all</code><br>Push all of your local branches to the specified remote.</p>
<p><code>git push &lt;remote&gt; --tags</code><br>ags are not automatically pushed when you push a branch or use the —all option. The —tags flag sends all of your local tags to the remote repository.</p>
<p><code>git push origin master</code></p>
<h4 id="Examples-2">Examples</h4><p>First, it makes sure your local master is up-to-date by fetching the central repository’s copy and rebasing your changes on top of them. The interactive rebase is also a good opportunity to clean up your commits before sharing them. Then, the git push command sends all of the commits on your local master to the central repository<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git fetch origin master</span><br><span class="line">git rebase -<span class="keyword">i</span> origin/master</span><br><span class="line"># Squash commits, <span class="keyword">fix</span> <span class="keyword">up</span> commit <span class="keyword">messages</span> etc.</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p>
<h3 id="Work_flow">Work flow</h3><ol>
<li>fork offical repository</li>
<li>git clone <a href="https://user@bitbucket.org/user/repo.git" target="_blank" rel="external">https://user@bitbucket.org/user/repo.git</a></li>
<li>git checkout -b some-feature</li>
<li><h1 id="Edit_some_code">Edit some code</h1></li>
<li>git commit -a -m “Add first draft of some feature”</li>
</ol>
<p>Mary can use as many commits as she needs to create the feature. And, if the feature’s history is messier than she would like, she can use an interactive rebase to remove or squash unnecessary commits. For larger projects, cleaning up a feature’s history makes it much easier for the project maintainer to see what’s going on in the pull request</p>
<p>After her feature is complete, Mary pushes the feature branch to her own Bitbucket repository (not the official repository) with a simple git push:</p>
<ol>
<li>git push origin some-branch</li>
</ol>
<p>To correct the error, Mary adds another commit to her feature branch and pushes it to her Bitbucket repository, just like she did the first time around. This commit is automatically added to the original pull request, and John can review the changes again, right next to his original comment.</p>
<h3 id="Using_Branches">Using Branches</h3><h3 id="git_branch">git branch</h3><p>The git branch command lets you create, list, rename, and delete branches. It doesn’t let you switch between branches or put a forked history back together again. For this reason, git branch is tightly integrated with the git checkout and git merge commands.</p>
<p>List all of the branches in your repository.<br><code>git branch</code></p>
<p>Create a new branch called <branch>. This does not check out the new branch.<br><code>git branch &lt;branch&gt;</code></branch></p>
<p>Delete the specified branch. This is a “safe” operation in that Git prevents you from deleting the branch if it has unmerged changes.<br><code>git branch -d &lt;branch&gt;</code></p>
<p>Force delete the specified branch, even if it has unmerged changes. This is the command to use if you want to permanently throw away all of the commits associated with a particular line of development.<br><code>git branch -D &lt;branch&gt;</code></p>
<p>Rename the current branch to <branch>.<br><code>git branch -m &lt;branch&gt;</code></branch></p>
<p>In Git, branches are a part of your everyday development process. When you want to add a new feature or fix a bug—no matter how big or how small—you spawn a new branch to encapsulate your changes. This makes sure that unstable code is never committed to the main code base, and it gives you the chance to clean up your feature’s history before merging it into the main branch.</p>
<h4 id="Example">Example</h4><p>It’s important to understand that branches are just pointers to commits. When you create a branch, all Git needs to do is create a new pointer—it doesn’t change the repository in any other way. So, if you start with a repository that looks like this:</p>
<p><code>git branch crazy-experiment</code><br>The repository history remains unchanged. All you get is a new pointer to the current commit:</p>
<p>Note that this only creates the new branch. To start adding commits to it, you need to select it with git checkout, and then use the standard git add and git commit commands. Please see the git checkout section of this module for more information.</p>
<p><code>git branch -d crazy-experiment</code></p>
<p><code>git checkout &lt;existing-branch&gt;</code></p>
<p>Create and check out <new-branch>.<br><code>git checkout -b &lt;new-branch&gt;</code></new-branch></p>
<p>base the new branch off of <existing-branch> instead of the current branch<br><code>git checkout -b &lt;new-branch&gt; &lt;existing-branch&gt;</code></existing-branch></p>
<p>Remember that the HEAD is Git’s way of referring to the current snapshot. the git checkout command simply updates the HEAD to point to either the specified branch or commit. When it points to a branch, Git doesn’t complain, but when you check out a commit, it switches into a “detached HEAD” state.</p>
<p>The point is, your development should always take place on a branch—never on a detached HEAD. This makes sure you always have a reference to your new commits. However, if you’re just looking at an old commit, it doesn’t really matter if you’re in a detached HEAD state or not.</p>
<h4 id="Example-1">Example</h4><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git branch<span class="instruction"> new-feature</span><br><span class="line"></span>git checkout<span class="instruction"> new-feature</span><br><span class="line"></span></span><br><span class="line"><span class="comment"># Edit some files</span></span><br><span class="line">git<span class="instruction"> add </span>&lt;file&gt;</span><br><span class="line">git commit -m <span class="string">"Started work on a new feature"</span></span><br><span class="line"><span class="comment"># Repeat</span></span><br></pre></td></tr></table></figure>
<p>All of these are recorded in new-feature, which is completely isolated from master. You can add as many commits here as necessary without worrying about what’s going on in the rest of your branches. When it’s time to get back to “official” code base, simply check out the master branch:<br><code>git checkout master</code></p>
<h3 id="git_merge">git merge</h3><p>Note that all of the commands presented below merge into the current branch. The current branch will be updated to reflect the merge, but the target branch will be completely unaffected. Again, this means that git merge is often used in conjunction with git checkout for selecting the current branch and git branch -d for deleting the obsolete target branch.</p>
<p>Merge the specified branch into the current branch. Git will determine the merge algorithm automatically<br><code>git merge &lt;branch&gt;</code></p>
<p>Merge the specified branch into the current branch, but always generate a merge commit (even if it was a fast-forward merge). This is useful for documenting all merges that occur in your repository.<br><code>git merge --no-ff &lt;branch&gt;</code></p>
<h4 id="fast-forward_merge">fast-forward merge</h4><p>A fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip. This effectively combines the histories, since all of the commits reachable from the target branch are now available through the current one. For example, a fast forward merge of some-feature into master would look something like the following:</p>
<p>However, a fast-forward merge is not possible if the branches have diverged. When there is not a linear path to the target branch, Git has no choice but to combine them via a 3-way merge. 3-way merges use a dedicated commit to tie together the two histories. The nomenclature comes from the fact that Git uses three commits to generate the merge commit: the two branch tips and their common ancestor.</p>
<h3 id="Resolving_Conflicts">Resolving Conflicts</h3><p>f the two branches you‘re trying to merge both changed the same part of the same file, Git won’t be able to figure out which version to use. When such a situation occurs, it stops right before the merge commit so that you can resolve the conflicts manually.</p>
<p>The great part of Git’s merging process is that it uses the familiar edit/stage/commit workflow to resolve merge conflicts. When you encounter a merge conflict, running the git status command shows you which files need to be resolved. For example, if both branches modified the same section of hello.py, you would see something like the following:<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// On branch master</span></span><br><span class="line"><span class="comment">// Unmerged paths:</span></span><br><span class="line"><span class="comment">// (use "git add/rm ..." as appropriate to mark resolution)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// both modified: hello.py</span></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure></p>
<p>Then, you can go in and fix up the merge to your liking. When you’re ready to finish the merge, all you have to do is run git add on the conflicted file(s) to tell Git they’re resolved. Then, you run a normal git commit to generate the merge commit. It’s the exact same process as committing an ordinary snapshot, which means it’s easy for normal developers to manage their own merges.</p>
<p>Note that merge conflicts will only occur in the event of a 3-way merge. It’s not possible to have conflicting changes in a fast-forward merge.</p>
<h4 id="Example-2">Example</h4><p>Fast-Forward Merge<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Start a<span class="instruction"> new </span>feature</span><br><span class="line">git checkout -b<span class="instruction"> new-feature </span>master</span><br><span class="line"></span><br><span class="line"><span class="comment"># Edit some files</span></span><br><span class="line">git<span class="instruction"> add </span>&lt;file&gt;</span><br><span class="line">git commit -m <span class="string">"Start a feature"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Edit some files</span></span><br><span class="line">git<span class="instruction"> add </span>&lt;file&gt;</span><br><span class="line">git commit -m <span class="string">"Finish a feature"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Merge in the new-feature branch</span></span><br><span class="line">git checkout master</span><br><span class="line">git merge<span class="instruction"> new-feature</span><br><span class="line"></span>git branch -d new-feature</span><br></pre></td></tr></table></figure></p>
<p>3-Way Merge</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// Start a<span class="instruction"> new </span>feature</span><br><span class="line">git checkout -b<span class="instruction"> new-feature </span>master</span><br><span class="line"></span><br><span class="line"><span class="comment"># Edit some files</span></span><br><span class="line">git<span class="instruction"> add </span>&lt;file&gt;</span><br><span class="line">git commit -m <span class="string">"Start a feature"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Edit some files</span></span><br><span class="line">git<span class="instruction"> add </span>&lt;file&gt;</span><br><span class="line">git commit -m <span class="string">"Finish a feature"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Develop the master branch</span></span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"><span class="comment"># Edit some files</span></span><br><span class="line">git<span class="instruction"> add </span>&lt;file&gt;</span><br><span class="line">git commit -m <span class="string">"Make some super-stable changes to master"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Merge in the new-feature branch</span></span><br><span class="line">git merge<span class="instruction"> new-feature</span><br><span class="line"></span>git branch -d new-feature</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="git_tutorials">git tutorials</h2><h3 id="git_remote">git remote</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//List <span class="operator">the</span> remote connections you have <span class="built_in">to</span> other repositories</span><br><span class="line">git remote</span><br><span class="line"><span class="comment"></span><br><span class="line">//List the remote connections you have to other repositories, include the URL</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line">git remote <span class="built_in">add</span> &lt;name&gt; &lt;url&gt;</span><br><span class="line">git remote rm &lt;name&gt;</span><br><span class="line">git remote <span class="built_in">rename</span> &lt;old-name&gt; &lt;<span class="built_in">new</span>-name&gt;</span><br></pre></td></tr></table></figure>
<h4 id="The_origin_Remote">The origin Remote</h4><p>When you clone a repository with git clone, it automatically creates a remote connection called origin pointing back to the cloned repository. This is useful for developers creating a local copy of a central repository, since it provides an easy way to pull upstream changes or publish local commits. This behavior is also why most Git-based projects call their central repository origin.</p>]]>
    
    </summary>
    
      <category term="Git" scheme="http://ytlvy.com/categories/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git tutorials -- Getting Started]]></title>
    <link href="http://ytlvy.com/2015/05/29/git-tutorials-getting-started/"/>
    <id>http://ytlvy.com/2015/05/29/git-tutorials-getting-started/</id>
    <published>2015-05-29T02:05:34.000Z</published>
    <updated>2015-06-05T07:07:49.000Z</updated>
    <content type="html"><![CDATA[<h2 id="git_tutorials">git tutorials</h2><h3 id="setup_a_repository">setup a repository</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// initialize an local repository</span></span><br><span class="line">git <span class="keyword">init</span></span><br><span class="line">git <span class="keyword">init</span> &lt;directory&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//initialize a Central repositories or server </span></span><br><span class="line">git <span class="keyword">init</span> --bare &lt;directory&gt;.git</span><br><span class="line"></span><br><span class="line">ssh &lt;user&gt;@&lt;host&gt;</span><br><span class="line">cd path/above/repo </span><br><span class="line">git <span class="keyword">init</span> --bare my-project.git</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="clone">clone</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="tag">&lt;<span class="title">repo</span>&gt;</span></span><br><span class="line">git clone <span class="tag">&lt;<span class="title">repo</span>&gt;</span> <span class="tag">&lt;<span class="title">directory</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="config">config</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//edit config</span></span><br><span class="line">git config --<span class="keyword">global</span> --<span class="keyword">edit</span></span><br></pre></td></tr></table></figure>
<h4 id="config_options_file">config options file</h4><ol>
<li><repo>/.git/config – Repository-specific settings.</repo></li>
<li>~/.gitconfig – User-specific settings. This is where options set with the —global flag are stored</li>
<li>$(prefix)/etc/gitconfig – System-wide settings.</li>
</ol>
<h3 id="Saving_changes_—————_edit/stage/commit">Saving changes  ————— edit/stage/commit</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">add</span> &lt;<span class="keyword">file</span>&gt;         // Stage <span class="keyword">all</span> <span class="keyword">changes</span> in &lt;<span class="keyword">file</span>&gt; <span class="keyword">for</span> the <span class="keyword">next</span> commit.</span><br><span class="line">git <span class="built_in">add</span> &lt;directory&gt;    // Stage <span class="keyword">all</span> <span class="keyword">changes</span> in &lt;directory&gt; <span class="keyword">for</span> the <span class="keyword">next</span> commit</span><br><span class="line">git <span class="built_in">add</span> <span class="keyword">p</span>              //  interactive staging</span><br><span class="line">git <span class="built_in">add</span> .              // stage <span class="keyword">all</span> <span class="keyword">changes</span> in current directory</span><br></pre></td></tr></table></figure>
<h3 id="log">log</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br><span class="line">git <span class="built_in">log</span> -n &lt;limit&gt;</span><br><span class="line">git <span class="built_in">log</span> <span class="comment">--oneline</span></span><br><span class="line">git <span class="built_in">log</span> <span class="comment">--stat // include which files were altered and the relative number of lines that modified</span></span><br><span class="line">git <span class="built_in">log</span> -p    <span class="comment"> //  shows the full diff of each commit,</span></span><br><span class="line">git <span class="built_in">log</span> <span class="comment">--author="&lt;pattern&gt;"</span></span><br><span class="line">git <span class="built_in">log</span> <span class="comment">--grep="&lt;pattern&gt;"</span></span><br><span class="line">git <span class="built_in">log</span> &lt;since&gt;..&lt;<span class="keyword">until</span>&gt;    <span class="comment"> //Both arguments can be either a commit ID, a branch name, HEAD</span></span><br><span class="line">git <span class="built_in">log</span> &lt;<span class="built_in">file</span>&gt;</span><br><span class="line">git <span class="built_in">log</span> <span class="comment">--graph --decorate --oneline</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> <span class="comment">--author="John Smith" -p hello.py</span></span><br><span class="line"><span class="comment"></span><br><span class="line">//The .. syntax is a very useful tool for comparing branches</span></span><br><span class="line">git <span class="built_in">log</span> <span class="comment">--oneline master..branch</span></span><br></pre></td></tr></table></figure>
<p>commit 3157ee3718e180a9476bf2e5cab8e3f1e78a73b7   —— SHA-1 checksum of the commit’s contents<br>The ~ character is useful for making relative references to the parent of a commit. For example, 3157e~1 refers to the commit before 3157e, and HEAD~3 is the great-grandparent of the current commit.</p>
<h3 id="view_old_commits_—_checkout">view old commits — checkout</h3><p>checking out files,<br>checking out commits<br>checking out branches. </p>
<p>Checking out a commit makes the entire working directory match that commit. This can be used to view an old state of your project without altering your current state in any way. Checking out a file lets you see an old version of that particular file, leaving the rest of your working directory untouched.</p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git checkout</span><br><span class="line"></span><br><span class="line">git checkout master   // return <span class="keyword">to</span> master branch</span><br><span class="line"></span><br><span class="line">git checkout <span class="variable">&lt;commit&gt;</span> <span class="variable">&lt;file&gt;</span></span><br><span class="line"></span><br><span class="line">//You can use either a commit hash or a <span class="keyword">tag</span> as the <span class="variable">&lt;commit&gt;</span> argument. </span><br><span class="line">//This will put you <span class="keyword">in</span> a detached HEAD <span class="keyword">state</span></span><br><span class="line">git checkout <span class="variable">&lt;commit&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --oneline</span><br><span class="line">git checkout a1e8fb5</span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git checkout a1e8fb5 hello.<span class="keyword">py</span></span><br><span class="line">git checkout HEAD hello.<span class="keyword">py</span></span><br></pre></td></tr></table></figure>
<h3 id="Undo">Undo</h3><h3 id="git_revert">git revert</h3><p>git revert is a “safe” way to undo changes<br>Generate a new commit that undoes all of the changes introduced in <commit>, then apply it to the current branch.<br>Reverting should be used when you want to remove an entire commit from your project history.</commit></p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">git</span> <span class="keyword">revert </span>&lt;commit&gt;</span><br></pre></td></tr></table></figure>
<h3 id="Reverting_vs-_Resetting">Reverting vs. Resetting</h3><p>It’s important to understand that git revert undoes a single commit—it does not “revert” back to the previous state of a project by removing all subsequent commits. In Git, this is actually called a reset, not a revert.</p>
<p>Reverting has two important advantages over resetting. First, it doesn’t change the project history, which makes it a “safe” operation for commits that have already been published to a shared repository. For details about why altering shared history is dangerous, please see the git reset page.</p>
<p>Second, git revert is able to target an individual commit at an arbitrary point in the history, whereas git reset can only work backwards from the current commit. For example, if you wanted to undo an old commit with git reset, you would have to remove all of the commits that occurred after the target commit, remove it, then re-commit all of the subsequent commits. Needless to say, this is not an elegant undo solution.</p>
<figure class="highlight mizar"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git commit -m "Make some changes <span class="keyword">that</span> will <span class="keyword">be</span> undone</span><br><span class="line">git revert HEAD</span><br></pre></td></tr></table></figure>
<h3 id="git_reset">git reset</h3><p>dangerous method</p>
<h4 id="use">use</h4><ol>
<li>remove committed snapshots, </li>
<li>undo changes in the staging area and the working directory</li>
</ol>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git <span class="operator"><span class="keyword">reset</span> &lt;file&gt;</span><br><span class="line">//Remove the specified file <span class="keyword">from</span> the staging area, but leave the working directory unchanged. This unstages a file without overwriting <span class="keyword">any</span> changes</span><br><span class="line"></span><br><span class="line">git <span class="keyword">reset</span></span><br><span class="line">//<span class="keyword">Reset</span> the staging area <span class="keyword">to</span> <span class="keyword">match</span> the most recent <span class="keyword">commit</span>, but leave the working directory unchanged. This unstages <span class="keyword">all</span> files without overwriting <span class="keyword">any</span> changes, giving you the opportunity <span class="keyword">to</span> re-build the staged <span class="keyword">snapshot</span> <span class="keyword">from</span> scratch</span><br><span class="line"></span><br><span class="line">git <span class="keyword">reset</span> <span class="comment">--hard</span></span><br><span class="line">//<span class="keyword">Reset</span> the staging area <span class="keyword">and</span> the working directory <span class="keyword">to</span> <span class="keyword">match</span> the most recent <span class="keyword">commit</span>. <span class="keyword">In</span> addition <span class="keyword">to</span> unstaging changes, the <span class="comment">--hard flag tells Git to overwrite all changes in the working directory, too. Put another way: this obliterates all uncommitted changes, so make sure you really want to throw away your local developments before using it.</span></span><br><span class="line"></span><br><span class="line">git <span class="keyword">reset</span> &lt;<span class="keyword">commit</span>&gt;</span><br><span class="line"></span><br><span class="line">git <span class="keyword">reset</span> <span class="comment">--hard &lt;commit&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>All of the above invocations are used to remove changes from a repository. Without the —hard flag, git reset is a way to clean up a repository by unstaging changes or uncommitting a series of snapshots and re-building them from scratch. The —hard flag comes in handy when an experiment has gone horribly wrong and you need a clean slate to work with</p>
<p>Whereas reverting is designed to safely undo a public commit, git reset is designed to undo local changes. Because of their distinct goals, the two commands are implemented differently: resetting completely removes a changeset, whereas reverting maintains the original changeset and uses a new commit to apply the undo</p>
<h3 id="Don’t_Reset_Public_History">Don’t Reset Public History</h3><p>You should never use git reset <commit> when any snapshots after <commit> have been pushed to a public repository</commit></commit></p>
<p>The point is, make sure that you’re using git reset <commit> on a local experiment that went wrong—not on published changes. If you need to fix a public commit, the git revert command was designed specifically for this purpose.</commit></p>
<h3 id="Examples">Examples</h3><h4 id="Unstaging_a_File">Unstaging a File</h4><p>The git reset command is frequently encountered while preparing the staged snapshot. The next example assumes you have two files called hello.py and main.py that you’ve already added to the repository.<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// Edit both hello.<span class="keyword">py</span> <span class="built_in">and</span> main.<span class="keyword">py</span></span><br><span class="line"></span><br><span class="line">// Stage everything in the current directory</span><br><span class="line">git <span class="built_in">add</span> .</span><br><span class="line"></span><br><span class="line">// Realize that the <span class="keyword">changes</span> in hello.<span class="keyword">py</span> <span class="built_in">and</span> main.<span class="keyword">py</span></span><br><span class="line">//should <span class="keyword">be</span> committed in different snapshots</span><br><span class="line"></span><br><span class="line">// Unstage main.<span class="keyword">py</span></span><br><span class="line">git reset main.<span class="keyword">py</span></span><br><span class="line"></span><br><span class="line">// Commit <span class="keyword">only</span> hello.<span class="keyword">py</span></span><br><span class="line">git commit -<span class="keyword">m</span> <span class="string">"Make some changes to hello.py"</span></span><br><span class="line"></span><br><span class="line">// Commit main.<span class="keyword">py</span> in <span class="keyword">a</span> separate snapshot</span><br><span class="line">git <span class="built_in">add</span> main.<span class="keyword">py</span></span><br><span class="line">git commit -<span class="keyword">m</span> <span class="string">"Edit main.py"</span></span><br></pre></td></tr></table></figure></p>
<p>As you can see, git reset helps you keep your commits highly-focused by letting you unstage changes that aren’t related to the next commit.</p>
<h4 id="Removing_Local_Commits">Removing Local Commits</h4><p> It demonstrates what happens when you’ve been working on a new experiment for a while, but decide to completely throw it away after committing a few snapshots.</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// <span class="operator"><span class="keyword">Create</span> a new file called <span class="string">`foo.py`</span> <span class="keyword">and</span> <span class="keyword">add</span> <span class="keyword">some</span> code <span class="keyword">to</span> it</span><br><span class="line"></span><br><span class="line"># <span class="keyword">Commit</span> it <span class="keyword">to</span> the project history</span><br><span class="line">git <span class="keyword">add</span> foo.py</span><br><span class="line">git <span class="keyword">commit</span> -m <span class="string">"Start developing a crazy feature"</span></span><br><span class="line"></span><br><span class="line"># Edit <span class="string">`foo.py`</span> again <span class="keyword">and</span> <span class="keyword">change</span> <span class="keyword">some</span> other tracked files, too</span><br><span class="line"></span><br><span class="line"># <span class="keyword">Commit</span> another <span class="keyword">snapshot</span></span><br><span class="line">git <span class="keyword">commit</span> -a -m <span class="string">"Continue my crazy feature"</span></span><br><span class="line"></span><br><span class="line"># Decide <span class="keyword">to</span> scrap the feature <span class="keyword">and</span> remove the associated commits</span><br><span class="line">git <span class="keyword">reset</span> <span class="comment">--hard HEAD~2</span></span></span><br></pre></td></tr></table></figure>
<p>The git reset HEAD~2 command moves the current branch backward by two commits, effectively removing the two snapshots we just created from the project history. Remember that this kind of reset should only be used on unpublished commits. Never perform the above operation if you’ve already pushed your commits to a shared repository.</p>
<h3 id="git_clean">git clean</h3><p>removes untracked files from your working directory</p>
<p>The git clean command is often executed in conjunction with git reset —hard. Remember that resetting only affects tracked files, so a separate command is required for cleaning up untracked ones. Combined, these two commands let you return the working directory to the exact state of a particular commit.</p>
<figure class="highlight mizar"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//Perform a “dry run” <span class="keyword">of</span> git clean. This will show you which files are going to <span class="keyword">be</span> removed without actually doing it.</span><br><span class="line">git clean -n</span><br><span class="line"></span><br><span class="line">//Remove untracked files <span class="keyword">from</span> the current directory. The -f (force) flag <span class="keyword">is</span> required unless the clean.requireForce configuration option <span class="keyword">is</span> <span class="keyword">set</span> to false (it's true <span class="keyword">by</span> default). This will <span class="keyword">not</span> remove untracked folders <span class="keyword">or</span> files specified <span class="keyword">by</span> .gitignore.</span><br><span class="line">git clean -f</span><br><span class="line"></span><br><span class="line">git clean -f &lt;path&gt;</span><br><span class="line"></span><br><span class="line">//Remove untracked files <span class="keyword">and</span> untracked directories <span class="keyword">from</span> the current directory.</span><br><span class="line">git clean -df</span><br><span class="line"></span><br><span class="line">//Remove untracked files <span class="keyword">from</span> the current directory <span class="keyword">as</span> well <span class="keyword">as</span> any files <span class="keyword">that</span> Git usually ignores.</span><br><span class="line">git clean -xf</span><br></pre></td></tr></table></figure>
<p>The git reset —hard and git clean -f commands are your best friends after you’ve made some embarrassing developments in your local repository and want to burn the evidence. Running both of them will make your working directory match the most recent commit, giving you a clean slate to work with.</p>
<p>he git clean command can also be useful for cleaning up the working directory after a build. For example, it can easily remove the .o and .exe binaries generated by a C compiler. This is occasionally a necessary step before packaging a project for release. The -x option is particularly convenient for this purpose.</p>
<p>Keep in mind that, along with git reset, git clean is one of the only Git commands that has the potential to permanently delete commits, so be careful with it</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Edit some existing files</span></span><br><span class="line"><span class="preprocessor"># Add some new files</span></span><br><span class="line"><span class="preprocessor"># Realize you have no idea what you're doing</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Undo changes in tracked files</span></span><br><span class="line">git reset --hard</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Remove untracked files</span></span><br><span class="line">git clean -df</span><br></pre></td></tr></table></figure>
<h2 id="Rewriting_history">Rewriting history</h2><h3 id="git_commit_—amend">git commit —amend</h3><p>never amend commits that have been pushed to a public repository.<br>Amended commits are actually entirely new commits, and the previous commit is removed from the project history. This has the same consequences as resetting a public snapshot</p>
<p>The git commit —amend command is a convenient way to fix up the most recent commit. It lets you combine staged changes with the previous commit instead of committing it as an entirely new snapshot. It can also be used to simply edit the previous commit message without changing its snapshot</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Edit hello.<span class="keyword">py</span> <span class="built_in">and</span> main.<span class="keyword">py</span></span><br><span class="line">git <span class="built_in">add</span> hello.<span class="keyword">py</span></span><br><span class="line">git commit</span><br><span class="line"></span><br><span class="line"># Realize you forgot <span class="keyword">to</span> <span class="built_in">add</span> the <span class="keyword">changes</span> from main.<span class="keyword">py</span></span><br><span class="line">git <span class="built_in">add</span> main.<span class="keyword">py</span></span><br><span class="line">git commit --amend --<span class="keyword">no</span>-<span class="keyword">edit</span></span><br></pre></td></tr></table></figure>
<p>Combine the staged changes with the previous commit and replace the previous commit with the resulting snapshot. Running this when there is nothing staged lets you edit the previous commit’s message without altering its snapshot</p>
<h3 id="git_rebase">git rebase</h3><p>Don’t Rebase Public History</p>
<p>Rebasing is the process of moving a branch to a new base commit. </p>
<p>From a content perspective, rebasing really is just moving a branch from one commit to another. But internally, Git accomplishes this by creating new commits and applying them to the specified base—it’s literally rewriting your project history. It’s very important to understand that, even though the branch looks the same, it’s composed of entirely new commits.</p>
<p><code>git rebase &lt;base&gt;</code><br>Rebase the current branch onto <base>, which can be any kind of commit reference (an ID, a branch name, a tag, or a relative reference to HEAD).</p>
<h4 id="Discussion">Discussion</h4><p>The primary reason for rebasing is to maintain a linear project history. For example, consider a situation where the master branch has progressed since you started working on a feature:</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// Start a<span class="instruction"> new </span>feature</span><br><span class="line">git checkout -b<span class="instruction"> new-feature </span>master</span><br><span class="line"><span class="comment"># Edit files</span></span><br><span class="line">git commit -a -m <span class="string">"Start developing a feature"</span></span><br></pre></td></tr></table></figure>
<p>In the middle of our feature, we realize there’s a security hole in our project</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// <span class="operator"><span class="keyword">Create</span> a hotfix branch based off <span class="keyword">of</span> <span class="keyword">master</span></span><br><span class="line">git checkout -b hotfix <span class="keyword">master</span></span><br><span class="line"># Edit files</span><br><span class="line">git <span class="keyword">commit</span> -a -m <span class="string">"Fix security hole"</span></span><br><span class="line"># <span class="keyword">Merge</span> back <span class="keyword">into</span> <span class="keyword">master</span></span><br><span class="line">git checkout <span class="keyword">master</span></span><br><span class="line">git <span class="keyword">merge</span> hotfix</span><br><span class="line">git branch -d hotfix</span></span><br></pre></td></tr></table></figure>
<p>After merging the hotfix into master, we have a forked project history. Instead of a plain git merge, we’ll integrate the feature branch with a rebase to maintain a linear history:</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout<span class="instruction"> new-feature</span><br><span class="line"></span>git rebase master</span><br></pre></td></tr></table></figure>
<p>This moves new-feature to the tip of master, which lets us do a standard fast-forward merge from master:</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git <span class="built_in">merge</span> <span class="built_in">new</span>-feature</span><br></pre></td></tr></table></figure>
<h3 id="git_rebase_-i">git rebase -i</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">an</span> interactive rebasing session</span><br></pre></td></tr></table></figure>
<h4 id="Examples-1">Examples</h4><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Start a<span class="instruction"> new </span>feature</span><br><span class="line">git checkout -b<span class="instruction"> new-feature </span>master</span><br><span class="line"><span class="comment"># Edit files</span></span><br><span class="line">git commit -a -m <span class="string">"Start developing a feature"</span></span><br><span class="line"><span class="comment"># Edit more files</span></span><br><span class="line">git commit -a -m <span class="string">"Fix something from the previous commit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add a commit directly to master</span></span><br><span class="line">git checkout master</span><br><span class="line"><span class="comment"># Edit files</span></span><br><span class="line">git commit -a -m <span class="string">"Fix security hole"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Begin an interactive rebasing session</span></span><br><span class="line">git checkout<span class="instruction"> new-feature</span><br><span class="line"></span>git rebase -i master</span><br></pre></td></tr></table></figure>
<p>The last command will open an editor populated with the two commits from new-feature, along with some instructions:</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pick <span class="number">32618</span>c4 Start developing <span class="operator">a</span> feature</span><br><span class="line">pick <span class="number">62</span>eed47 Fix something <span class="built_in">from</span> <span class="operator">the</span> previous commit</span><br></pre></td></tr></table></figure>
<p>You can change the pick commands before each commit to determine how it gets moved during the rebase. In our case, let’s just combine the two commits with a squash command:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pick <span class="number">32618</span>c4 Start developing <span class="operator">a</span> feature</span><br><span class="line">squash <span class="number">62</span>eed47 Fix something <span class="built_in">from</span> <span class="operator">the</span> previous commit</span><br></pre></td></tr></table></figure></p>
<p>Save and close the editor to begin the rebase. This will open another editor asking for the commit message for the combined snapshot. After defining the commit message, the rebase is complete and you should be able to see the squashed commit in your git log output. </p>
<p>Note that the squashed commit has a different ID than either of the original commits, which tells us that it is indeed a brand new commit.</p>
<p>Finally, you can do a fast-forward merge to integrate the polished feature branch into the main code base:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git <span class="built_in">merge</span> <span class="built_in">new</span>-feature</span><br></pre></td></tr></table></figure></p>
<h3 id="git_reflog">git reflog</h3><p>Git keeps track of updates to the tip of branches using a mechanism called reflog. This allows you to go back to changesets even though they are not referenced by any branch or tag. After rewriting history, the reflog contains information about the old state of branches and allows you to go back to that state if necessary.</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br><span class="line"></span><br><span class="line">git reflog <span class="comment">--relative-date</span></span><br></pre></td></tr></table></figure>
<p>Every time the current HEAD gets updated (by switching branches, pulling in new changes, rewriting history or simply by adding new commits) a new entry will be added to the reflog</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0a2e358 HEAD@&#123;0&#125;: <span class="operator"><span class="keyword">reset</span>: moving <span class="keyword">to</span> HEAD~<span class="number">2</span></span><br><span class="line"><span class="number">0254</span>ea7 HEAD@&#123;<span class="number">1</span>&#125;: checkout: moving <span class="keyword">from</span> <span class="number">2.2</span> <span class="keyword">to</span> <span class="keyword">master</span></span><br><span class="line">c10f740 HEAD@&#123;<span class="number">2</span>&#125;: checkout: moving <span class="keyword">from</span> <span class="keyword">master</span> <span class="keyword">to</span> <span class="number">2.2</span></span></span><br></pre></td></tr></table></figure>
<p>The reflog above shows a checkout from master to the 2.2 branch and back. From there, there’s a hard reset to an older commit. The latest activity is represented at the top labeled HEAD@{0}.</p>
<p>If it turns out that you accidentially moved back, the reflog will contain the commit master pointed to (0254ea7) before you accidentially dropped 2 commits.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="git_tutorials">git tutorials</h2><h3 id="setup_a_repository">setup a repository</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// initialize an local repository</span></span><br><span class="line">git <span class="keyword">init</span></span><br><span class="line">git <span class="keyword">init</span> &lt;directory&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//initialize a Central repositories or server </span></span><br><span class="line">git <span class="keyword">init</span> --bare &lt;directory&gt;.git</span><br><span class="line"></span><br><span class="line">ssh &lt;user&gt;@&lt;host&gt;</span><br><span class="line">cd path/above/repo </span><br><span class="line">git <span class="keyword">init</span> --bare my-project.git</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Git" scheme="http://ytlvy.com/categories/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[最近阅读资料]]></title>
    <link href="http://ytlvy.com/2015/05/27/recently-readings/"/>
    <id>http://ytlvy.com/2015/05/27/recently-readings/</id>
    <published>2015-05-27T07:55:53.000Z</published>
    <updated>2015-05-29T00:43:00.000Z</updated>
    <content type="html"><![CDATA[<h2 id="book">book</h2><ol>
<li>Functional Programming Patterns in Scala and Clojure- Write Lean Programs for the JVM</li>
<li>iOS.8.by.Tutorials.2014.12</li>
<li>Leanpub.Functional Reactive Programming on iOS.2014</li>
<li>Pro.Multithreading.and.Memory.Management.for.iOS.and.OS.X</li>
<li></li>
</ol>
<h2 id="links">links</h2><ol>
<li><a href="http://www.raywenderlich.com/32283/core-graphics-tutorial-lines-rectangles-and-gradients" target="_blank" rel="external">http://www.raywenderlich.com/32283/core-graphics-tutorial-lines-rectangles-and-gradients</a></li>
<li><a href="http://www.raywenderlich.com/34003/core-graphics-tutorial-curves-and-layers" target="_blank" rel="external">http://www.raywenderlich.com/34003/core-graphics-tutorial-curves-and-layers</a></li>
<li><a href="http://www.raywenderlich.com/33193/core-graphics-tutorial-arcs-and-paths" target="_blank" rel="external">http://www.raywenderlich.com/33193/core-graphics-tutorial-arcs-and-paths</a></li>
<li><a href="http://www.raywenderlich.com/82058/custom-control-tutorial-ios-swift-reusable-knob" target="_blank" rel="external">http://www.raywenderlich.com/82058/custom-control-tutorial-ios-swift-reusable-knob</a></li>
<li><a href="http://www.raywenderlich.com/90693/modern-core-graphics-with-swift-part-1" target="_blank" rel="external">http://www.raywenderlich.com/90693/modern-core-graphics-with-swift-part-1</a></li>
<li><a href="http://www.raywenderlich.com/90693/modern-core-graphics-with-swift-part-2" target="_blank" rel="external">http://www.raywenderlich.com/90693/modern-core-graphics-with-swift-part-2</a></li>
<li><a href="http://www.raywenderlich.com/90695/modern-core-graphics-with-swift-part-3" target="_blank" rel="external">http://www.raywenderlich.com/90695/modern-core-graphics-with-swift-part-3</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="book">book</h2><ol>
<li>Functional Programming Patterns in Scala and Clojure- Write Lean Programs for the JVM</li>
<li>iOS.8.by.Tuto]]>
    </summary>
    
      <category term="Study" scheme="http://ytlvy.com/categories/Study/"/>
    
  </entry>
  
</feed>